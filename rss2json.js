const rss2json = {"Scitech": {"https://newatlas.com/science/index.rss": {"feed": {"title": "Science"}, "entries": []}, "https://www.cbsnews.com/latest/rss/science": {"feed": {"title": "Science - CBSNews.com"}, "entries": [{"title": "Why a 3-million-year-old lizard species in Arizona has virtually disappeared", "summary": "A report from the United Nations determined that 1 million species are threatened with extinction. Dr. John Wiens from the University of Arizona believes that number is far higher based on his research. He says climate change is quickening the threat of extinction for species,...", "link": "https://www.cbsnews.com/video/why-a-3-million-year-old-lizard-species-in-arizona-has-virtually-disappeared/", "published_js": "2024-04-19", "author": "None"}, {"title": "Too hot for a lizard? Climate change quickens extinction", "summary": "A disappearing lizard population in the mountains of Arizona shows how climate change is fast-tracking the rate of extinction.", "link": "https://www.cbsnews.com/news/lizard-population-declining-climate-change/", "published_js": "2024-04-19", "author": "None"}]}, "https://www.cbsnews.com/latest/rss/space": {"feed": {"title": "Space - CBSNews.com"}, "entries": []}}, "Gadgets": {"https://www.emergentmind.com/feeds/rss": {"feed": {"title": "Emergent Mind Feed"}, "entries": []}}, "Food_Health": {"https://phys.org/rss-feed/biology-news/agriculture/": {"feed": {"title": "Agriculture news"}, "entries": [{"title": "Pomegranate power: Unlocking sustainable antimicrobial solutions from peels", "summary": "Pomegranates, known for their rich phenolic content, have been explored for their potential as natural antimicrobials. The research focuses on the peel, which contains a high concentration of these beneficial compounds and represents a significant portion of the fruit's biomass. The study presents a multivariate...", "link": "https://phys.org/news/2024-04-pomegranate-power-sustainable-antimicrobial-solutions.html", "published_js": "2024-04-19", "author": "None"}, {"title": "How climate change affects potato cultivation in South Korea", "summary": "A study published in the journal Potato Research presents results on the response of spring and summer potatoes to climate change in South Korea. The study, conducted by scientists from the Leibniz Center for Agricultural Landscape Research (ZALF) and the Brandenburg University of Technology Cottbus,...", "link": "https://phys.org/news/2024-04-climate-affects-potato-cultivation-south.html", "published_js": "2024-04-19", "author": "None"}, {"title": "Previously unknown details of aphids in flight to contribute to improved crop security", "summary": "Researchers led by a scientist at Keele University in Staffordshire have studied the previously unknown flight mechanisms of a common crop pest, to learn more about their movements in a bid to improve food security and prevent the spread of disease. The research has been...", "link": "https://phys.org/news/2024-04-previously-unknown-aphids-flight-contribute.html", "published_js": "2024-04-19", "author": "None"}]}}, "Nature": {"http://feeds.feedburner.com/DiscoverLivingWorld": {"feed": {"title": "Planet Earth | Discover Magazine"}, "entries": [{"title": "Ancient Artifacts Have Been Found in the Grand Canyon, Going Back 12,000 Years", "summary": "Humans have left evidence of their passing through America\u2019s great rift for more than 10 millennia.", "link": "https://www.discovermagazine.com/planet-earth/ancient-artifacts-have-been-found-in-the-grand-canyon-going-back-12-000", "published_js": "2024-04-19", "author": "Joshua Rapp Learn"}, {"title": "Orcas May be Smarter Than You Think, Here's What to Know About Their Behaviors", "summary": "Explore the enchanting world of orcas, where stunning beauty meets remarkable intelligence through unique adaptations and complex social behaviors.", "link": "https://www.discovermagazine.com/planet-earth/orcas-may-be-smarter-than-you-think-heres-what-to-know-about-their-behaviors", "published_js": "2024-04-19", "author": "Jake Parks"}]}, "http://feeds.feedburner.com/DiscoverEnvironment": {"feed": {"title": "Environment | Discover Magazine"}, "entries": []}}, "Business": {}, "Foss_Self-hosting": {}, "History": {}, "News": {"https://www.livemint.com/rss/elections": {"feed": {"title": "mint - elections"}, "entries": [{"title": "BJP fumes as Shah Rukh Khan lookalike campaigns for Congress in Maharashtra: \u2018Imagine the lengths\u2026\u2019", "summary": "Videos of Shah Rukh Khan-lookalike campaigning for Congress in Maharashtra anger BJP. Party spokesperson condemns \u2018deceptive\u2019 tactics", "link": "https://www.livemint.com/elections/bjp-congress-lok-sabha-elections-2024-shah-rukh-khan-lookalike-poll-campaign-praniti-shinde-maharashtra-solapur-11713530918624.html", "published_js": "2024-04-19", "author": "None"}, {"title": "Lok Sabha polls 2024 Phase One: Almost zero per cent voting recorded in 6 Nagaland districts \u2014 here is why", "summary": "Almost zero per cent of voting was recorded in six eastern districts of Nagaland following a 'public emergency' declared by the ENPO, which is demanding a separate administration \u2014 Frontier Nagaland Territory \u2014 with more financial autonomy.", "link": "https://www.livemint.com/elections/lok-sabha-polls-2024-phase-one-nagaland-eastern-nagaland-peoples-organisation-enpo-frontier-nagaland-territory-11713532014800.html", "published_js": "2024-04-19", "author": "None"}, {"title": "Lok Sabha elections 2024: Chennai Central records lowest voter turnout in TN constituencies till 7 pm", "summary": "Lok Sabha elections 2024: In the first phase of general elections, Chennai Central has recorded lowest voter turnout till 7 pm Of the 39 constituencies in the state", "link": "https://www.livemint.com/elections/lok-sabha-elections-2024-chennai-records-lowest-voter-turnout-chennai-south-central-north-tamil-nadu-11713522332803.html", "published_js": "2024-04-19", "author": "None"}, {"title": "Lok Sabha Elections 2024: <i>\u2018Aatank ka supplier tha ab atta\u2026</i>\u2019, PM Modi takes a jibe at crisis-hit Pakistan in MP rally", "summary": "Lok Sabha Elections 2024: PM Modi emphasized the importance of a strong government, highlighting BJP's stance on nation first and efficient decision-making for the benefit of India.", "link": "https://www.livemint.com/elections/lok-sabha-elections-2024-aatank-ka-supplier-tha-ab-atta-pm-modi-takes-jibe-at-crisis-hit-pakistan-11713518617245.html", "published_js": "2024-04-19", "author": "None"}, {"title": "Lok Sabha polls 2024: Over 48% turnout recorded in 4 seats of Bihar till 6 pm", "summary": "An average voter turnout of 48.23% was recorded till 6pm of polling on Friday in four Lok Sabha constituencies of Bihar where voting is underway in the first phase of the Lok Sabha election", "link": "https://www.livemint.com/elections/lok-sabha-polls-2024voter-turnout-recorded-bihar-gaya-nawada-jamui-aurangabad-11713522158695.html", "published_js": "2024-04-19", "author": "None"}, {"title": "Lok Sabha Elections 2024: Rahul Gandhi urges voters to open \u2018Mohabbat Ki Dukaan\u2019 as phase 1 polling begins", "summary": "Polling commenced for the first phase of Lok Sabha elections, with Rahul Gandhi urging voters to establish 'Mohabbat ki Dukaan' to strengthen democracy and defeat hatred. Over 1,600 candidates are contesting across 102 seats.", "link": "https://www.livemint.com/elections/lok-sabha-elections-2024-rahul-gandhi-urges-voters-to-open-mohabbat-ki-dukaan-as-phase-1-polling-begins-11713496989591.html", "published_js": "2024-04-19", "author": "None"}]}, "swarajyamag.com": {"feed": {"title": "swarajyamag.com"}, "entries": [{"title": "\u2018Mango-Man\u2019 Kejriwal\u2019s Tryst With Mangoes", "summary": "<a href=\" target=\"_blank\">\u2018Mango-Man\u2019 Kejriwal\u2019s Tryst With Mangoes</a>&nbsp;&nbsp;<font color=\"#6f6f6f\">", "link": "https://news.google.com/rss/articles/CBMiSmh0dHBzOi8vc3dhcmFqeWFtYWcuY29tL25ld3NsZXR0ZXJzL21hbmdvLW1hbi1rZWpyaXdhbHMtdHJ5c3Qtd2l0aC1tYW5nb2Vz0gFUaHR0cHM6Ly9zd2FyYWp5YW1hZy5jb20vYW1wL3N0b3J5L25ld3NsZXR0ZXJzL21hbmdvLW1hbi1rZWpyaXdhbHMtdHJ5c3Qtd2l0aC1tYW5nb2Vz?oc=5", "published_js": "2024-04-19", "author": "None"}, {"title": "Historian Irfan Habib Says 'Marathas Gave Aligarh Its Name'- Maratha History Researcher Says 'Not True'", "summary": "<a href=\" target=\"_blank\">Historian Irfan Habib Says 'Marathas Gave Aligarh Its Name'- Maratha History Researcher Says 'Not True'</a>&nbsp;&nbsp;<font color=\"#6f6f6f\">", "link": "https://news.google.com/rss/articles/CBMigwFodHRwczovL3N3YXJhanlhbWFnLmNvbS9wb2xpdGljcy9oaXN0b3JpYW4taXJmYW4taGFiaWItc2F5cy1tYXJhdGhhcy1nYXZlLWFsaWdhcmgtaXRzLW5hbWUtbWFyYXRoYS1oaXN0b3J5LXJlc2VhcmNoZXItc2F5cy1ub3QtdHJ1ZdIBjQFodHRwczovL3N3YXJhanlhbWFnLmNvbS9hbXAvc3RvcnkvcG9saXRpY3MvaGlzdG9yaWFuLWlyZmFuLWhhYmliLXNheXMtbWFyYXRoYXMtZ2F2ZS1hbGlnYXJoLWl0cy1uYW1lLW1hcmF0aGEtaGlzdG9yeS1yZXNlYXJjaGVyLXNheXMtbm90LXRydWU?oc=5", "published_js": "2024-04-19", "author": "None"}]}}, "Reddit": {"https://oauth.reddit.com/r/todayilearned/top": {"feed": {"title": "Reddit - TIL"}, "entries": [{"title": "TIL that Vincent van Gogh was so in love with his widowed cousin that he held his hand in the flame of a lamp in front of his uncle while saying to him: \"Let me see her for as long as I can keep my hand in the flame.\"", "summary": "", "link": "https://en.wikipedia.org/wiki/Vincent_van_Gogh", "author": "None"}, {"title": "TIL during a rap beef, Jay-Z wrote a diss song against Nas, describing him having an affair with Nas girlfriend. Jay-Z's mom was disgusted with her son's behaviour and made him apologize to Nas and his family", "summary": "", "link": "https://en.wikipedia.org/wiki/Nas", "author": "None"}, {"title": "TIL that A man named G\u00f6ran Kropp from Sweden rode his bicycle to Nepal, climbed Mount Everest alone without Sherpas or bottled oxygen, then cycled back to Sweden again.", "summary": "", "link": "https://en.wikipedia.org/wiki/G%C3%B6ran_Kropp", "author": "None"}, {"title": "TIL of shade balls, which are placed on water reservoirs to prevent sunlight and evaporation, among other things", "summary": "", "link": "https://en.wikipedia.org/wiki/Shade_ball", "author": "None"}, {"title": "TIL of Dr. Jessie Lazear, an American physician who studied yellow fever under the famous Dr. Walter Reed. He allowed himself to be bitten by an infected mosquito, and died of the disease himself 17 days later, confirming how the disease was spread. His sacrifice saved millions. ", "summary": "", "link": "https://en.wikipedia.org/wiki/Jesse_William_Lazear", "author": "None"}, {"title": "TIL researchers have found almost 10% of U.S. adults ages 65 and older have dementia, while another 22% have mild cognitive impairment.", "summary": "", "link": "https://www.cuimc.columbia.edu/news/one-10-older-americans-has-dementia", "author": "None"}, {"title": "TIL actor Robert Patrick\u2019s scrotum was briefly visible in the original cut of Terminator 2. But for the 3D re-release his balls were removed by VFX artists.", "summary": "", "link": "https://screenrant.com/terminator-2-3d-changes-james-cameron-cgi/", "author": "None"}, {"title": "TIL Swedish car company Volvo turned down a deal that would see them sell 40% of their company for a share of Norwegian oil, that share is now worth 140-200 billion dollars, Volvo was sold in 2010 for less than 2 billion dollars", "summary": "", "link": "https://equinor.industriminne.no/en/the-volvo-agreement-almost-volvoil/", "author": "None"}, {"title": "TIL a Guatemalan boy saw soldiers come into his village and murder his parents along with the rest of the village, was adopted and raised in an abusive household by one of the men who massacred the villagers, and later gave testimony that sent the killer to prison with a 6,000 year sentence", "summary": "", "link": "https://newsinteractives.cbc.ca/longform/survivor-guatemala-massacre-ramiro-cristales", "author": "None"}, {"title": "TIL In 1974 there were so many tornado warnings in Indiana that forecasters couldn't keep up. In frustration, they ended up putting the entire state under a tornado warning. This was the first and only time this has ever happened.", "summary": "", "link": "https://en.wikipedia.org/wiki/1974_Super_Outbreak", "author": "None"}, {"title": "TIL that Sofia\u2014the first robot to get citizenship in any country\u2014was given this status in Saudi Arabia on 2017. This was done in order for Saudi Arabia to position itself as a leader in AI Technology.", "summary": "", "link": "https://en.wikipedia.org/wiki/Sophia_%28robot%29?wprov=sfla1", "author": "None"}, {"title": "TIL a portion of earnings from \"Family Guy\" are donated towards the Rainforest Trust. In 2019, show creator Seth MacFarlane donated $1 million.", "summary": "", "link": "https://www.businesswire.com/news/home/20191204005274/en/Seth-MacFarlane-Gives-1-Million-to-Rainforest-Trust-to-Stop-Deforestation", "author": "None"}, {"title": "TIL a 2021 UK study analyzed hospital statistics for 2010-2019 and found that 3,500 rectal foreign bodies were removed during that 9-year period. It also determined that nearly 400 removals were performed each year with an annual cost to the NHS of \u00a3338,819.", "summary": "", "link": "https://pubmed.ncbi.nlm.nih.gov/34719960/", "author": "None"}, {"title": "TIL after losing her position in her university's anatomy department in 1938, Rita Levi-Montalcini set up a laboratory in her bedroom and studied the growth of nerve fibers in chicken embryos. This work led to her discovery of nerve growth factor, for which she was awarded a Nobel Prize in 1986.", "summary": "", "link": "https://en.wikipedia.org/wiki/Rita_Levi-Montalcini", "author": "None"}, {"title": "TIL that cellophane is not made from plastic but is produced from plants - using regenerated cellulose derived from organic materials including wood, cotton and hemp.", "summary": "", "link": "https://en.wikipedia.org/wiki/Cellophane", "author": "None"}, {"title": "TIL about the Horseshoe Crab and how this ancient creature has been exploited by medical laboratories with little regulation.", "summary": "", "link": "https://www.npr.org/2023/06/10/1180761446/coastal-biomedical-labs-are-bleeding-more-horseshoe-crabs-with-little-accountabi", "author": "None"}, {"title": "TIL that Missouri is likely called the Show-Me State in reference to a speech from a Congressman in 1899: \"I come from a state that raises corn and cotton and cockleburs and Democrats, and frothy eloquence neither convinces nor satisfies me. I am from Missouri. You have got to show me.\"", "summary": "", "link": "https://history.howstuffworks.com/american-history/missouri-show-me-state.htm", "author": "None"}, {"title": "TIL that contrary to popular belief, the Mesopotamian god Dagon has nothing to do with fish or the sea, and the portrayal of him as a fish god based entirely on the medieval belief that his name was derived from the Hebrew word for fish, \"d\u0101g\", which was debunked in the 1920s", "summary": "", "link": "https://en.wikipedia.org/wiki/Dagon#Fish-god_interpretation", "author": "None"}, {"title": "TIL Crows can remember a dangerous human and share informations about them to other crows", "summary": "", "link": "https://www.cbc.ca/amp/1.1014915", "author": "None"}, {"title": "TIL Frank Richards, a circus performer, endured severe blows to his stomach, letting a boxing champion hit him 75 times and even withstood being shot by a 47kg cannonball. The cannon was loaded with a spring and fired at close range, but Frank resisted these feats twice daily.", "summary": "", "link": "https://en.wikipedia.org/wiki/Frank_Richards_(performer)", "author": "None"}, {"title": "TIL that the first Coachella Music Festival was held in 1999. It was inspired by a 1993 Pearl Jam concert. Pearl Jam's lead singer, Eddie Vedder, led the band to boycott venues controlled by Ticketmaster and perform at the Empire Polo Club grounds instead. ", "summary": "", "link": "https://en.wikipedia.org/wiki/Coachella", "author": "None"}, {"title": "TIL about \"Terva Leijona\" (Tar lion), a finnish caramel made of solidified pitch tar, licorice and salt. The flavor is described as herbal.", "summary": "", "link": "https://www.atlasobscura.com/foods/terva-leijona-finnish-tar-candy", "author": "None"}, {"title": "TIL about Christine Granville, a WW2 spy and Polish aristocrat - Winston Churchill would declare her as his favourite spy. She talks her way into service with M16, gets captured by Germans twice but escapes, and rescues her lover from execution by firing squad.", "summary": "", "link": "https://www.bbc.co.uk/news/uk-england-london-67298675", "author": "None"}, {"title": "TIL: That during the mad cow crisis in the 90s, reactions to the West were overwhelmingly negative in India, where cows hold a special place in the hearts of Hindus. Hindu associations declared that the West had been punished with the appearance of sick humans for its zoophagy, or meat-eating.", "summary": "", "link": "http://en.wikipedia.org/wiki/Mad_cow_crisis", "author": "None"}, {"title": "TIL Two of the founding members of the Allman Brothers Band died in Motorcycle accidents 3 blocks apart almost exactly 1 year apart from each other.", "summary": "", "link": "https://en.wikipedia.org/wiki/Berry_Oakley#Death_and_tribute", "author": "None"}]}, "https://oauth.reddit.com/.json": {"feed": {"title": "Reddit - TIL"}, "entries": [{"title": "Feeling so inferior in the NLP job market.", "summary": "Some time ago I read this post on this thread and I completely relate: [ \r  \nI originally come from a language background and thought there could be job opportunities in the NLP field, so a couple of years back I enrolled in a master\u2019s programme about NLP and language technology. It turned out to put a lot of emphasis on theory, but even thought it was a very demanding programme and I put a lot of effort into it I didn\u2019t really acquire any technical/practical skills apart from some basic coding skills. \r  \nAfter graduating I started working for a NLP company, but in a more linguistic position that will be completely replaced by AI within a couple of years. Although I feel like I did learn some things at this job, I am very far from the technical and coding skills required to work in the field nowadays, especially because everything is constantly changing at such a fast pace. I feel like my timing was completely off. I\u2019m trying to learn on my own, but how can I keep up? \r  \nI am not sure how I can progress - I did not acquire these skills at university, so how can I learn them at a job if those skills are required to get the job in the first place? It\u2019s starting to feel like I wasted soo much time as I probably have no future in this field.\n\nDoes anybody here come from a Humanities/Language background and managed to keep up enough to get a good job?\r", "link": "https://www.reddit.com/r/LanguageTechnology/comments/1c80slh/feeling_so_inferior_in_the_nlp_job_market/", "author": "None"}, {"title": "\"If You Want To See The Future, Come To India\": US Envoy Eric Garcetti", "summary": "", "link": "https://www.ndtv.com/india-news/if-you-want-to-see-the-future-come-to-india-us-envoy-eric-garcetti-5410974", "author": "None"}, {"title": "The Los Angeles murder of Georgette Bauerdorf, daughter of oil wealth and alumnus of Marlborough School", "summary": "", "link": "https://www.audible.com/podcast/Episode-541-The-Unsolved-Murder-of-Georgette-Bauerdorf/B0CWGV92YW", "author": "None"}, {"title": "France urged to repay billions of dollars to Haiti for independence \u2018ransom\u2019", "summary": "", "link": "https://www.theguardian.com/world/2024/apr/18/haiti-france-reparations", "author": "None"}, {"title": "Pleiasfr releases a massive open corpus of 2 million Youtube videos in Creative Commons (CC-By) on Huggingface", "summary": "", "link": "https://huggingface.co/datasets/PleIAs/YouTube-Commons", "author": "None"}, {"title": "GitHub - Python Library for Random Walks", "summary": "", "link": "https://github.com/sadrasabouri/pyrandwalk", "author": "None"}, {"title": "Selective language modeling: New method allows for better models with less data", "summary": "\ud83d\udc49 Researchers have developed a method called Selective Language Modeling (SLM), which trains language models more efficiently by focusing on the most relevant tokens. First, a reference model is trained, which is used to calculate the relevance of each token in the entire training corpus.\r\n\r\n\ud83d\udc49 The actual language model is then trained specifically on the tokens that show a high difference between the loss of the reference model and the current model. In this way, the system learns the most relevant tokens for the target task.\r\n\r\n\ud83d\udc49 With only 15 billion training tokens, RHO-1 trained with SLM achieved performance comparable to a DeepSeekMath model trained with 500 billion tokens. The method could help develop AI models more quickly and cost-effectively.\n\n", "link": "https://www.reddit.com/r/TheDecoder/comments/1c7uqzk/selective_language_modeling_new_method_allows_for/", "author": "None"}, {"title": "Lockheed may provide a co-tech collab for India's 5th-gen fighter", "summary": "", "link": "https://bulgarianmilitary.com/2024/04/19/lockheed-may-provide-a-co-tech-collab-for-indias-5th-gen-fighter/", "author": "None"}, {"title": "Complete Pandemonium in Heaven: The Great Tangshan Earthquake in 1976 and China's Cultural Revolution", "summary": "", "link": "https://creativehistorystories.blogspot.com/2024/04/complete-pandemonium-in-heaven-great.html", "author": "None"}, {"title": "Early humans spread as far north as Siberia 400,000 years ago", "summary": "", "link": "https://www.scihb.com/2024/04/early-humans-spread-as-far-north-as.html", "author": "None"}, {"title": "Jailer 16.1 Database Tool has been released", "summary": "", "link": "https://github.com/Wisser/Jailer", "author": "None"}, {"title": "Biden limits oil drilling across 13 million acres of Alaskan Arctic", "summary": "", "link": "https://www.washingtonpost.com/climate-environment/2024/04/19/drilling-alaska-national-petroleum-reserve/", "author": "None"}, {"title": "Tata Group to take over Pegatron\u2019s iPhone manufacturing ops in India: Report", "summary": "", "link": "https://www.businesstoday.in/tech-today/news/story/tata-group-to-take-over-pegatrons-iphone-manufacturing-ops-in-india-report-426211-2024-04-19", "author": "None"}, {"title": "1,700-year-old Roman ruins have been discovered atop a much old Neolithic sacred spring near Limoges in France", "summary": "", "link": "https://www.livescience.com/archaeology/romans/1700-year-old-roman-ruins-discovered-atop-much-older-neolithic-sacred-spring", "author": "None"}, {"title": "Sumerian furniture inlay of a goat bearer (2500-2340BCE, early dynastic period)", "summary": "", "link": "https://i.redd.it/kv1ffehshhvc1.jpeg", "author": "None"}, {"title": "NLP: building a sentiment model", "summary": "I just began learning NLP so at novice level.  I want to create a sentiment model. The dataset is high dimensional with many TF-IDF columns and about 4 sentiment columns negative, positive , neutral and compound. I thought the compound sentiment values was the total sentiment to be used as my target, however on visual examination the other sentiment numbers don't seem to add up to the compound sentiment.  The sentiment values are also very large or very small sometimes negative numbers with no clear meaning. 1. how to I assign meaning to these huge numbers? are tf-idf numeric values used as features? Im going to use LSTM. Thanks in advance for your time", "link": "https://www.reddit.com/r/LanguageTechnology/comments/1c7zsfl/nlp_building_a_sentiment_model/", "author": "None"}, {"title": "West Asia crisis: Israel's inevitable retaliation against Iran has taken place, and India is caught in the crossfire", "summary": "", "link": "https://www.firstpost.com/opinion/israel-iran-west-asia-middle-east-attack-13761231.html", "author": "None"}, {"title": "ICC considering issuing war crimes arrest warrants for Netanyahu, others", "summary": "", "link": "https://www.jpost.com/international/article-797820", "author": "None"}, {"title": "Reality of Dunki | Rise in Indian immigrants crossing borders on foot | Docsplainer | Part 1", "summary": "", "link": "https://youtu.be/sWoDh8sa4ts?feature=shared", "author": "None"}, {"title": "What is the best way to represent prepositions in a knowledge graph?", "summary": "Simple example sentence would be Trevor was the CEO of Uber for 8 years where of Uber and for 8 years are the prepositions. Another sentence could be Haley was the CEO but it has no prepositions.\n\nThe challenges come in when we want to model these statements. Let there be a simple statement in the KR such as:\n\nemployedAs(Trevor, CEO)\n\nThen representing the prepositions could be done as follows but with challenges:\n\n1. prepositions could be designed as predicates over predicates:\n\ncompany(employedAs(Trevor, CEO), Uber)\n\nbut I'm afraid the meaning could become ambiguous. Additionally, I do not know of any technology that lets me make compositions of predicates.\n\n2. We could devise additional parameters for our predicates:\n\nemployedAs(Trevor, CEO, Uber, 8 years)\n\nbut then we probably need to commit to a certain number of parameters. What if in the future we had some additional parameters such as approval rating of the CEO?\n\n3. We could create new predicates for each parameter combination and make them subproperties of employedAs:\n\n    forall x,y,z (employedAtAs(x,y,z) -&gt; employedAs(x,y))\n    forall x,y,z,a (employedAtForAs(x,y,z,a) -&gt; employedAs(x,y))\n\nbut is this scalable? Could require crazy amounts of inference to constantly check property hierarchies.\n\n4. We could reify the predicate employedAs\n\n\nemployedAsIn(Trevor, employedReifiedObj1)\nemployedAsOut(employedReifiedObj1, CEO)\ncompany(employedReifiedObj1, Uber)\n\n\nbut this adds many additional statements and I'm not sure how well it works with adding rules to edges like hierarchy, inverse, functional property, or anything custom.\n\nWhat do you think is best? Am I missing any techniques? I think my preferred method would be 1, but the technology and research is lacking.", "link": "https://www.reddit.com/r/LanguageTechnology/comments/1c843h4/what_is_the_best_way_to_represent_prepositions_in/", "author": "None"}, {"title": "The Historic Brooklyn Bridge", "summary": "", "link": "https://open.substack.com/pub/historydigest/p/the-historic-brooklyn-bridge?r=317aub&amp;utm_campaign=post&amp;utm_medium=web&amp;showWelcomeOnShare=true", "author": "None"}, {"title": "PM encourages military leaders to strengthen military diplomacy to avoid armed conflict - Khmer Times", "summary": "", "link": "https://www.khmertimeskh.com/501475196/pm-encourages-military-leaders-to-strengthen-military-diplomacy-to-avoid-armed-conflict/", "author": "None"}, {"title": "Proof of concept: Using Python w/ReactJS to make a desktop task time tracker.", "summary": "", "link": "https://github.com/devdave/pyminder", "author": "None"}, {"title": "Trouble with cusim (CUDA-Word2Vec)", "summary": "I'm trying to use Cusim for an NLP-Project, but I have trouble getting it to run on an Sagemaker instance.\n\nDoes anyone have experience with that?\n\nI tried to modify the cuda\\_setup.py file ( [ ), in particular the following functions:\n\n    def get_cuda_sm_list(cuda_ver):\n      if \"CUDA_SM_LIST\" in os.environ:\n        sm_list = os.environ[\"CUDA_SM_LIST\"].split(\",\")\n      else:\n        sm_list = [\"30\", \"52\", \"60\", \"61\", \"70\", \"75\", \"80\", \"86\"]\n        if cuda_ver &gt;= 110:\n          filter_list = [\"30\"]\n          if cuda_ver == 110:\n            filter_list += [\"86\"]\n        else:\n          filter_list = [\"80\", \"86\"]\n          if cuda_ver &lt; 100:\n            filter_list += [\"75\"]\n          if cuda_ver &lt; 90:\n            filter_list += [\"70\"]\n          if cuda_ver &lt; 80:\n            filter_list += [\"60\", \"61\"]\n        sm_list = [sm for sm in sm_list if sm not in filter_list]\n      return sm_list\n    \n    def get_cuda_compute(cuda_ver):\n      if \"CUDA_COMPUTE\" in os.environ:\n        compute = os.environ[\"CUDA_COMPUTE\"]\n      else:\n        if 70 &lt;= cuda_ver &lt; 80:\n          compute = \"52\"\n        if 80 &lt;= cuda_ver &lt; 90:\n          compute = \"61\"\n        if 90 &lt;= cuda_ver &lt; 100:\n          compute = \"70\"\n        if 100 &lt;= cuda_ver &lt; 110:\n          compute = \"75\"\n        if cuda_ver == 110:\n          compute = \"80\"\n        if cuda_ver == 111:\n          compute = \"86\"\n      return compute\n    \n    def get_cuda_arch(cuda_ver):\n      if \"CUDA_ARCH\" in os.environ:\n        arch = os.environ[\"CUDA_ARCH\"]\n      else:\n        if 70 &lt;= cuda_ver &lt; 92:\n          arch = \"30\"\n        if 92 &lt;= cuda_ver &lt; 110:\n          arch = \"50\"\n        if cuda_ver == 110:\n          arch = \"52\"\n        if cuda_ver == 111:\n          arch = \"80\"\n      return arch\n\nHowever I didn't manage it to get it to work.\n\nCUDA 11.1 is not available in the repo for Ubuntu 22.04 [\n\nHowever it IS available for Ubuntu 20.04\n\nSo I downloaded the deprecated key:\n\n    wget  -O cuda-deprecated-key.pub\n\nadded it to apt:\n\n    sudo apt-key add cuda-deprecated-key.pub\n\nwrote the repository into the sources list:\n\n    sudo nano /etc/apt/sources.list\n    deb  /\n\nallowed insecure repositories by writing into the apt.conf:\n\n    sudo nano /etc/apt/apt.conf\n    \n    Acquire::AllowInsecureRepositories \"true\";\n\nupdated and installed cuda-toolkit-11-1:\n\n    sudo apt update\n    sudo apt install cuda-toolkit-11-1\n\nset the environment variables and installed cuda-11-1 (and pytorch) in the mamba environment:\n\n    mamba install pytorch torchvision torchaudio cudatoolkit=11.1 -c pytorch -c nvidia -c conda-forge\n\ninstalled gcc 10 and G++10:\n\n    sudo apt install gcc-10 g++-10\n\ncofigured the alternatives (not required in my case):\n\n    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10\n\nand installed cusim using pip.\n\nAlso the samples and my own code don't work. But I'm not sure wether it's correct (probably not).\n\nHere's the terminal content for the samples:\n\n    (mamba_gpu) sagemaker-user@default:~/cuda/cusim/cusim/examples$ python example_w2v.py run_experiments --sg0=True --hs0=True\n    [INFO    ] 2024-04-19 09:25:20 [example_w2v.py] [download:47]./res/quora-duplicate-questions.stream.txt already exists\n    Traceback (most recent call last):\n      File \"/home/sagemaker-user/cuda/cusim/cusim/examples/example_w2v.py\", line 163, in &lt;module&gt;\n        fire.Fire()\n      File \"/home/sagemaker-user/.conda/envs/mamba_gpu/lib/python3.10/site-packages/fire/core.py\", line 143, in Fire\n        component_trace = _Fire(component, args, parsed_flag_args, context, name)\n      File \"/home/sagemaker-user/.conda/envs/mamba_gpu/lib/python3.10/site-packages/fire/core.py\", line 477, in _Fire\n        component, remaining_args = _CallAndUpdateTrace(\n      File \"/home/sagemaker-user/.conda/envs/mamba_gpu/lib/python3.10/site-packages/fire/core.py\", line 693, in _CallAndUpdateTrace\n        component = fn(*varargs, **kwargs)\n      File \"/home/sagemaker-user/cuda/cusim/cusim/examples/example_w2v.py\", line 137, in run_experiments\n        elapsed, evals = run_gensim(skip_gram, hierarchical_softmax, i)\n      File \"/home/sagemaker-user/cuda/cusim/cusim/examples/example_w2v.py\", line 109, in run_gensim\n        model = gensim.models.Word2Vec(corpus_file=DATA_PATH, workers=workers,\n    TypeError: Word2Vec.__init__() got an unexpected keyword argument 'iter'\n    (mamba_gpu) sagemaker-user@default:~/cuda/cusim/cusim/examples$ python example_lda.py run_experiments\n    Traceback (most recent call last):\n      File \"/home/sagemaker-user/cuda/cusim/cusim/examples/example_lda.py\", line 17, in &lt;module&gt;\n        import wget\n    ModuleNotFoundError: No module named 'wget'\n    (mamba_gpu) sagemaker-user@default:~/cuda/cusim/cusim/examples$ \n\nAnd here's my Python code:\n\n    from cusim import CuW2V\n    import os\n    import gensim\n    from gensim.test.utils import datapath\n    \n    DATASET = \"testdaten\"\n    file_name = \"test_data.txt\"\n    DATA_PATH = f\"{file_name}\"\n    if os.path.exists(DATA_PATH):\n        print(f\"Die Datei '{DATA_PATH}' existiert.\")\n    else:\n        print(f\"Die Datei '{DATA_PATH}' existiert nicht.\")\n    \n    MIN_COUNT = 5\n    LEARNING_RATE = 0.001\n    NEG_SIZE = 10\n    NUM_DIMS = 100\n    CBOW_MEAN = False\n    EPOCHS = 10\n    opt = {\n        \"data_path\": DATA_PATH,\n        \"num_dims\": NUM_DIMS,\n        \"epochs\": EPOCHS,\n        \"word_min_count\": MIN_COUNT,\n        \"lr\": LEARNING_RATE,\n        \"io\": {\n            \"lower\": True\n        },\n        \"neg\": NEG_SIZE,\n        \"skip_gram\": True,\n        \"cbow_mean\": CBOW_MEAN,\n    }\n    print(opt)\n    \n    w2v = CuW2V(opt)\n    w2v.train_model()\n    \n    CUSIM_MODEL = \"cusim.w2v.model\"\n    \n    w2v.save_word2vec_format(CUSIM_MODEL, binary=False)\n    model = gensim.models.KeyedVectors.load_word2vec_format(model)\n    results = model.wv.evaluate_word_pairs(datapath(\"wordsim353.tsv\"),\n                                           case_insensitive=False)\n\nI get the following output:\n\n    [INFO    ] 2024-04-19 09:06:04 [pycuw2v.py] [__init__:38]opt: {\n      \"num_dims\": 100,\n      \"data_path\": \"test_data.txt\",\n      \"word_min_count\": 5,\n      \"epochs\": 10,\n      \"neg\": 10,\n      \"skip_gram\": true,\n      \"cbow_mean\": false,\n      \"lr\": 0.001,\n      \"io\": {\n        \"lower\": true,\n        \"py_log_level\": 2,\n        \"c_log_level\": 2,\n        \"chunk_lines\": 100000,\n        \"num_threads\": 4\n      },\n      \"py_log_level\": 2,\n      \"c_log_level\": 2,\n      \"processed_data_dir\": \"\",\n      \"skip_preprocess\": false,\n      \"block_dim\": 32,\n      \"hyper_threads\": 100,\n      \"batch_size\": 1000000,\n      \"seed\": 777,\n      \"random_size\": 100000000,\n      \"count_power\": 0.75,\n      \"window_size\": 5,\n      \"remove_tmp\": true\n    }\n    [info    ] 2024-04-19 09:06:04 [cuw2v.cu:31] cuda device info, major: 7, minor: 5, multi processors: 40, cores: 2560\n    [info    ] 2024-04-19 09:06:04 [cuw2v.cu:65] num_dims: 100, block_dim: 32, block_cnt: 8000, objective type: skip gram, neg: 10\n    [INFO    ] 2024-04-19 09:06:04 [pyioutils.py] [__init__:31]opt: {\n      \"py_log_level\": 2,\n      \"c_log_level\": 2,\n      \"chunk_lines\": 100000,\n      \"num_threads\": 4,\n      \"lower\": true\n    }\n    [INFO    ] 2024-04-19 09:06:04 [pyioutils.py] [convert_stream_to_h5:59]save key, count, token to /tmp/tmp3vncfd10/keys.txt, /tmp/tmp3vncfd10/count.txt, /tmp/tmp3vncfd10/token.h5\n    [info    ] 2024-04-19 09:06:04 [ioutils.cc:55] read stream file to generate vocabulary: test_data.txt\n    [info    ] 2024-04-19 09:06:04 [ioutils.cc:66] number of lines: 1\n    \n    1/1 [==============================] - 1s 690ms/line - word_count: 263567.0000\n    \n    [info    ] 2024-04-19 09:06:04 [ioutils.cc:159] number of raw words: 263567\n    [info    ] 2024-04-19 09:06:04 [ioutils.cc:167] number of words after filtering: 49541\n    [info    ] 2024-04-19 09:06:04 [ioutils.cc:172] dump keys to /tmp/tmp3vncfd10/keys.txt\n    [info    ] 2024-04-19 09:06:04 [ioutils.cc:55] read stream file to generate vocabulary: test_data.txt\n    [info    ] 2024-04-19 09:06:04 [ioutils.cc:66] number of lines: 1\n    \n    1/1 [==============================] - 1s 603ms/line\n    \n    [INFO    ] 2024-04-19 09:06:05 [pycuw2v.py] [init_model:64]load key, count from /tmp/tmp3vncfd10/keys.txt, /tmp/tmp3vncfd10/count.txt\n    [INFO    ] 2024-04-19 09:06:05 [pycuw2v.py] [init_model:78]number of words: 49541, docs: 1\n    [info    ] 2024-04-19 09:06:06 [cuw2v.cu:84] random table initialzied, size: 100000000 =&gt; 99979385\n    [INFO    ] 2024-04-19 09:06:06 [pycuw2v.py] [init_model:98]emb_in (49541, 100), emb_out (49541, 100) initialized\n    [INFO    ] 2024-04-19 09:06:06 [pycuw2v.py] [train_model:112]Epoch 1 / 10\n    \n    ---------------------------------------------------------------------------\n    IndexError                                Traceback (most recent call last)\n    Cell In[25], line 2\n          1 w2v = CuW2V(opt)\n    ----&gt; 2 w2v.train_model()\n    \n    File [~/.conda/envs/mamba_gpu/lib/python3.10/site-packages/cusim/cuw2v/pycuw2v.py:113]( in CuW2V.train_model(self)\n        111 for epoch in range(1, self.opt.epochs + 1):\n        112   self.logger.info(\"Epoch %d / %d\", epoch, self.opt.epochs)\n    --&gt; 113   self._train_epoch(h5f)\n        114 self.obj.pull()\n        115 h5f.close()\n    \n    File [~/.conda/envs/mamba_gpu/lib/python3.10/site-packages/cusim/cuw2v/pycuw2v.py:135]( in CuW2V._train_epoch(self, h5f)\n        131 offset = next_offset\n        133 # call cuda kernel\n        134 _loss_nume, _loss_deno = \\\n    --&gt; 135   self.obj.feed_data(cols, indptr.astype(np.int32))\n        137 # accumulate loss\n        138 loss_nume += _loss_nume\n    \n    IndexError: index 0 is out of bounds for axis 0 with size 0\n\nI used the following code for preprocessing it:\n\n    import os\n    import logging\n    import time\n    from multiprocessing import Process, current_process\n    import nltk\n    from nltk.tokenize import word_tokenize\n    from nltk.corpus import stopwords\n    from nltk.stem import WordNetLemmatizer\n    from nltk.corpus import wordnet\n    \n    # logging configuration\n    logging.basicConfig(level=logging.INFO,\n                        format='%(asctime)s %(levelname)s %(message)s',\n                        datefmt='%Y-%m-%d %H:%M:%S')\n    \n    \n    def read_file(file_path):\n        try:\n            with open(file_path, 'r', encoding='utf-8') as file:\n                text = file.read()\n            return text\n        except UnicodeDecodeError:\n            try:\n                #attempting with latin-1\n                with open(file_path, 'r', encoding='latin-1') as file:\n                    text = file.read()\n                print(f\"Info: Datei '{file_path}' wurde erfolgreich mit der Kodierung 'latin-1' gelesen.\")\n                return text\n            except UnicodeDecodeError:\n                # reading despite errors\n                with open(file_path, 'r', encoding='utf-8', errors='replace') as file:\n                    text = file.read()\n                print(f\"Warnung: Fehler beim Lesen der Datei '{file_path}'. Einige Zeichen wurden ersetzt.\")\n                return text\n    \n    \n    def preprocess_text(text):\n        tokens = word_tokenize(text, language='german')\n        lemmatizer = WordNetLemmatizer()\n        stop_words = set(stopwords.words('german'))\n        return ' '.join(lemmatizer.lemmatize(word.lower(), get_wordnet_pos(tag)) for word, tag in nltk.pos_tag(tokens, tagset='universal') if word.isalnum() and word.lower() not in stop_words)\n    \n    def get_wordnet_pos(treebank_tag):\n        if treebank_tag.startswith('N'):\n            return wordnet.NOUN\n        elif treebank_tag.startswith('V'):\n            return wordnet.VERB\n        elif treebank_tag.startswith('J'):\n            return wordnet.ADJ\n        elif treebank_tag.startswith('R'):\n            return wordnet.ADV\n        else:\n            return wordnet.NOUN\n    \n    def process_files(files, core, input_folder, output_folder, progress_file):\n        processed_files = set()\n        if os.path.exists(progress_file):\n            with open(progress_file, 'r') as pf:\n                processed_files = set(pf.read().splitlines())\n    \n        for filename in files:\n            start_time = time.time()\n            if filename in processed_files:\n                continue\n            file_path = os.path.join(input_folder, filename)\n            text = read_file(file_path)\n            if text:\n                processed_text = preprocess_text(text)\n                output_path = os.path.join(output_folder, f\"processed_{filename}\")\n                with open(output_path, 'w') as outfile:\n                    outfile.write(processed_text)\n                with open(progress_file, 'a') as pf:\n                    pf.write(filename + '\\n')\n                elapsed_time = time.time() - start_time\n                logging.info(f\"{current_process().name} verarbeitete {filename} in {elapsed_time:.2f} Sekunden\")\n                print(f\"{current_process().name} verarbeitete {filename} in {elapsed_time:.2f} Sekunden\")\n    \n    \n    def main():\n        input_folder = 'input'\n        output_folder = 'output'\n        progress_file = 'progress_log.txt'\n    \n        files = [f for f in os.listdir(input_folder) if f.endswith('.txt') and f.split('.')[0].isdigit()]\n        files = sorted(files, key=lambda x: int(x.split('.')[0]))\n    \n        processes = []\n        for core in range(os.cpu_count()):\n            part_files = [f for i, f in enumerate(files) if i % os.cpu_count() == core]\n            p = Process(target=process_files, args=(part_files, core, input_folder, output_folder, progress_file))\n            processes.append(p)\n            p.start()\n    \n        for p in processes:\n            p.join()\n    \n    \n    if __name__ == \"__main__\":\n        main()\n\nFeel free to copy it, it takes roughly 8 minutes per 30MB chunk on a Sagemaker ml.c5.9xlarge instance. It also has a function to resume if it crashed or is interrupted (that's what the log is for).\n\nFor staying in the RAM-requirements you need 30 MB chunks.\n\nI made them by using the following script:\n\n    import os\n    import tqdm\n    \n    def split_file(input_file, output_dir, chunk_size):\n        with open(input_file, 'rb') as f:\n            file_size = os.path.getsize(input_file)\n            chunk_amount = (file_size // chunk_size) + (file_size % chunk_size &gt; 0)\n            file_num = 1  # Z\u00e4hler f\u00fcr die Ausgabedateien\n            pbar = tqdm.tqdm(total=chunk_amount, dynamic_ncols=True, position=0)  # Initialisiert die Fortschrittsanzeige\n    \n            while True:\n                chunk = f.read(chunk_size)  # Liest einen Chunk der definierten Gr\u00f6\u00dfe\n                if not chunk:\n                    break  # Wenn kein Inhalt mehr gelesen wird, ist das Dateiende erreicht\n    \n                # Liest weiter bis das Ende der aktuellen Zeile erreicht ist\n                line_end = f.readline()\n                chunk += line_end  # F\u00fcgt das Ende der Zeile zum aktuellen Chunk hinzu\n    \n                output_file = os.path.join(output_dir, f'{file_num}.txt')  # Definiert den Pfad f\u00fcr die Ausgabedatei\n                with open(output_file, 'wb') as out:\n                    out.write(chunk)  # Schreibt den Chunk in die Ausgabedatei\n    \n                file_name_only = os.path.basename(output_file)\n                pbar.set_description(f\"File {file_name_only}\")  # Aktualisiert die Beschreibung der Fortschrittsanzeige\n                pbar.update(1)  # Aktualisiert die Fortschrittsanzeige um 1\n                file_num += 1  # Inkrementiert die Dateinummer f\u00fcr die n\u00e4chste Ausgabedatei\n            pbar.close()  # Schlie\u00dft die Fortschrittsanzeige nach der Schleife\n    \n    if __name__ == \"__main__\":\n        input_file = 'dewiki.txt'  # Der Name der Eingabedatei\n        output_dir = 'input'  # Das Verzeichnis, in dem die aufgeteilten Dateien gespeichert werden\n        chunk_size = 30 * 1024 * 1024  # Gr\u00f6\u00dfe jedes Chunks in Bytes (hier 30 MB)\n    \n        if not os.path.exists(output_dir):\n            os.makedirs(output_dir)  # Erstellt das Ausgabeverzeichnis, falls es nicht existiert\n    \n        split_file(input_file, output_dir, chunk_size)  # Ruft die Funktion zum Teilen der Datei auf", "link": "https://www.reddit.com/r/LanguageTechnology/comments/1c7t9j8/trouble_with_cusim_cudaword2vec/", "author": "None"}, {"title": "The killing of the Black Dahlia: Los Angeles\u2019s most enduring murder case", "summary": "Don\u2019t look up the pictures of the Black Dahlia after her murder. I say this as someone who learned the hard way.\n\nFor those who don\u2019t know, the name Black Dahlia applies to a woman called Elizabeth Short. Elizabeth who was killed in Los Angeles in 1947. She was found on a sidewalk on the west side of South Norton Avenue, midway between Coliseum Street and West 39th Street in the neighborhood of Leimert Park in South Los Angeles.\n\nSo why shouldn\u2019t you look up her murder photos? Well because her body was left in an ~extraordinarily~ harrowing condition. More harrowing than your worse nightmares could ever stir up. Not only was Elizabeth dismembered, but she was dismembered in a highly unusual way. As if she was mutilated with surgical precision. But that\u2019s not the worst of it. Now is where I have the unique displeasure of making you aware of the word \u2018exsanguination.\u2019 \u2018Ex\u2019 coming from a word for \u2018out.\u2019 And the Latin word \u2018sanguination\u2019 having to do with blood. In short exsanguination is when somebody purposely drains somebody else\u2019s blood from their body. In Elizabeth\u2019s case, when her killer did so. That left Elizabeth\u2019s dissected torso with a color that almost seemed unhuman. In fact an early passerby first believed that her torso was a piece of a mannequin. Responding police also had the same hunch in the beginning.\n\nNow I will say that even though I don\u2019t think that anybody ought to look up her photos, that doesn\u2019t mean that I don\u2019t think that people should research her case. Quite the opposite. I urge members of the public to read what\u2019s been written and watch what\u2019s been made about what happened to Elizabeth. I think that especially because her killer was not found at the time and because there are several suspects including George Hodel, Elizabeth\u2019s case needs all the minds that it can get. Even all these years later. It\u2019s not too late to solve Elizabeth\u2019s killing, mutilation and exsanguination. And while unlikely, it\u2019s possible that her perpetrator is still living. I will link some sources below to get you started.\n\n\n\n\n\n\n\n\n\n", "link": "https://www.reddit.com/r/HistoryAnecdotes/comments/1c7qlyk/the_killing_of_the_black_dahlia_los_angeless_most/", "author": "None"}]}}, "Sport": {"edition.cnn.com%20sport": {"feed": {"title": "edition.cnn.com"}, "entries": [{"title": "Bayer Leverkusen: 44-game unbeaten run is testament to Xabi Alonso\u2019s Midas touch", "summary": "<a href=\" target=\"_blank\">Bayer Leverkusen: 44-game unbeaten run is testament to Xabi Alonso\u2019s Midas touch</a>&nbsp;&nbsp;<font color=\"#6f6f6f\">", "link": "https://news.google.com/rss/articles/CBMiXmh0dHBzOi8vZWRpdGlvbi5jbm4uY29tLzIwMjQvMDQvMTkvc3BvcnQvYmF5ZXItbGV2ZXJrdXNlbi14YWJpLWFsb25zby0yMDI0LXNwdC1pbnRsL2luZGV4Lmh0bWzSAQA?oc=5", "published_js": "2024-04-19", "author": "None"}, {"title": "FAA, United investigate after video captures \u2018unauthorized person\u2019 in cockpit during flight chartered by Colorado Rockies", "summary": "<a href=\" target=\"_blank\">FAA, United investigate after video captures \u2018unauthorized person\u2019 in cockpit during flight chartered by Colorado Rockies</a>&nbsp;&nbsp;<font color=\"#6f6f6f\">", "link": "https://news.google.com/rss/articles/CBMid2h0dHBzOi8vZWRpdGlvbi5jbm4uY29tLzIwMjQvMDQvMTgvc3BvcnQvY29sb3JhZG8tcm9ja2llcy11bml0ZWQtYWlybGluZXMtZmxpZ2h0LXVuYXV0aG9yaXplZC1wZXJzb24tY29ja3BpdC9pbmRleC5odG1s0gFsaHR0cHM6Ly9hbXAuY25uLmNvbS9jbm4vMjAyNC8wNC8xOC9zcG9ydC9jb2xvcmFkby1yb2NraWVzLXVuaXRlZC1haXJsaW5lcy1mbGlnaHQtdW5hdXRob3JpemVkLXBlcnNvbi1jb2NrcGl0?oc=5", "published_js": "2024-04-19", "author": "None"}]}}};