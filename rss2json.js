const rss2json = {"Scitech": {"https://newatlas.com/science/index.rss": {"feed": {"title": "Science"}, "entries": [{"title": "Teaching drones how to handle air ducts like John McClane", "summary": "Drones are going full Die Hard as researchers from Inria, CNRS, the University of Lorraine, and Aix-Marseille University work on how to help quadcopters fly through ventilation ducts without getting lost or banging into the walls like a bean in a can.Category: drones, Artificial Intelligence", "link": "https://newatlas.com/science/drones-air-ducts/", "published_js": "2025-08-02", "author": "David Szondy"}, {"title": "Electron beam solves Teflon trash problem with super-efficient zaps", "summary": "Ever wonder what happens to those old Teflon-coated frying pans? Not a lot. Most get chucked into landfills. However, a new recycling technique developed by Japan's National Institutes for Quantum Science and Technology (QST) promises 100% effectiveness.Category: Teflon, Recycling", "link": "https://newatlas.com/environment/electron-beam-solves-teflon-problem-super-efficient-zaps/", "published_js": "2025-08-02", "author": "David Szondy"}]}, "https://www.cbsnews.com/latest/rss/science": {"feed": {"title": "Science - CBSNews.com"}, "entries": []}, "https://www.cbsnews.com/latest/rss/space": {"feed": {"title": "Space - CBSNews.com"}, "entries": []}}, "Gadgets": {"https://www.emergentmind.com/feeds/rss": {"feed": {"title": "Emergent Mind Feed"}, "entries": []}}, "Food_Health": {"https://phys.org/rss-feed/biology-news/agriculture/": {"feed": {"title": "Agriculture news"}, "entries": []}}, "Nature": {"http://feeds.feedburner.com/DiscoverLivingWorld": {"feed": {"title": "Planet Earth | Discover Magazine"}, "entries": []}, "http://feeds.feedburner.com/DiscoverEnvironment": {"feed": {"title": "Environment | Discover Magazine"}, "entries": []}}, "Business": {}, "Foss_Self-hosting": {}, "History": {}, "News": {"https://www.livemint.com/rss/politics/": {"feed": {"title": "mint - politics"}, "entries": []}, "https://www.livemint.com/rss/industry": {"feed": {"title": "mint - industry"}, "entries": [{"title": "Ad review: Sugar Free D\u2019lite\u2019s #CaloriesSeRaksha taps into sibling banter, but does the brand stick?", "summary": "#CaloriesSeRaksha is a clever wordplay, the ad is watchable, and the theme is familiar. Yet, it doesn\u2019t push creative boundaries or offer a unique take on sibling gifting. Unlike some of the more evocative festive campaigns by legacy players like Cadbury or Tanishq, this one...", "link": "https://www.livemint.com/industry/advertising/ad-review-sugar-free-d-lite-caloriesseraksha-zydus-wellness-rakhi-cookies-chocolate-marketing-advertising-11754203026468.html", "published_js": "2025-08-03", "author": "None"}, {"title": "India\u2019s  \u20b92 trillion paneer rush, and a battle with fakes", "summary": "India\u2019s cottage cheese market will total over  \u20b92 trillion by 2033. While Big Dairy companies, like Amul, Mother Dairy and Heritage Foods, are hoping to shift consumption from unbranded to branded paneer, thing\u2019s aren\u2019t that easy. We tell you why.", "link": "https://www.livemint.com/industry/paneer-market-dairy-products-branded-paneer-amul-mother-dairy-heritage-foods-milky-mist-parag-milk-cottage-cheese-11754212911520.html", "published_js": "2025-08-03", "author": "None"}, {"title": "TCS layoffs: Is efficiency the new growth strategy?", "summary": "TCS layoffs signal a pivot to margin preservation as Indian IT firms grapple with AI disruption and rising pricing pressure.", "link": "https://www.livemint.com/industry/infotech/tcs-layoffs-margins-efficiency-new-growth-strategy-ai-impact-it-sector-11754193917800.html", "published_js": "2025-08-03", "author": "None"}, {"title": "Bank holidays next week: From Raksha Bandhan, to Jhulana Purnima, Tendong Lho Rum Faat and weekends. Check full schedule", "summary": "Bank holidays next week, August 3-10: Check full RBI schedule for holidays next week, which include Raksha Bandhan, Jhulana Purnima, Tendong Lho Rum Faat, weekend Saturdays and Sundays.&amp;nbsp;", "link": "https://www.livemint.com/industry/banking/bank-holidays-next-week-august-3-10-raksha-bandhan-jhulana-purnima-tendong-lho-rum-faat-weekend-check-full-rbi-schedule-11754182238117.html", "published_js": "2025-08-03", "author": "None"}]}, "swarajyamag.com": {"feed": {"title": "swarajyamag.com"}, "entries": []}}, "Reddit": {"https://oauth.reddit.com/r/todayilearned/top": {"feed": {"title": "Reddit - TIL"}, "entries": [{"title": "TIL the TV show Scrubs was filmed in the North Hollywood Medical Center, using the entire decommissioned hospital. All of the writers also worked inside it, and it had an editing suite and a sound-studio for post-production. And instead of trailers for the cast, they were given old hospital rooms.", "summary": "", "link": "https://en.wikipedia.org/wiki/Scrubs_(TV_series)", "author": "None"}, {"title": "TIL after boxes of booster packs containing unreleased Magic: The Gathering cards were opened online, the publisher Wizards of the Coast sent Pinkerton agents to the home of the presenter to retrieve them. They confiscated 22 boxes after a confrontation that reportedly made the presenter's wife cry.", "summary": "", "link": "https://www.polygon.com/23695923/mtg-aftermath-pinkerton-raid-leaked-cards/", "author": "None"}, {"title": "TIL the restaurant betrayal scene in the Matrix used a spit bucket for actor Joe Pantoliano, who said rare beef makes him gag.  In wide shots they used shiitake mushrooms rigged to look like steak for the actor to eat.", "summary": "", "link": "https://www.inverse.com/entertainment/joe-pantoliano-the-matrix-steak-scene", "author": "None"}, {"title": "TIL that Elvis Presley\u2019s cousin was paid $18,000 by the National Enquirer to secretly photograph Elvis\u2019 corpse after his open-casket funeral. The issue went on to become the magazine\u2019s best-selling edition ever, with a record 6.7 million copies sold.", "summary": "", "link": "https://www.remindmagazine.com/article/18147/elvis-in-his-coffin-national-enquirer-edition/", "author": "None"}, {"title": "TIL Apple didn't invent Siri, they merely purchased it from an existing company.", "summary": "", "link": "https://www.imore.com/iphone/apple-acquired-siri-on-this-day-in-2010-so-this-14-year-anniversary-post-just-went-viral-and-everyone-is-saying-the-same-thing", "author": "None"}, {"title": "TIL that Hans Christian Andersen frequently accompanied his younger Danish friends to Paris brothels, where, while his companions \"amused themselves\", he talked to the sex workers", "summary": "", "link": "https://www.visithcandersen.dk/what-was-5.htm", "author": "None"}, {"title": "TIL in 1937 Angelo Hays slammed headfirst into a brick wall in a motorcycle crash &amp; was declared dead. However he was discovered alive when his body was exhumed 2 days after his funeral. He made a full recovery &amp; invented a coffin that contained a \"small oven, refrigerator &amp; a hi-fi cassette player\"", "summary": "", "link": "https://www.historyhit.com/buried-alive-stories/#:~:text=In%201937%2C%2019,hours%20buried%20underground", "author": "None"}, {"title": "TIL of the 1983 Video Game Collapse when industry revenues dropped 97% over two years.", "summary": "", "link": "https://en.wikipedia.org/wiki/Video_game_crash_of_1983#Causes_and_factors", "author": "None"}, {"title": "TIL each year roughly 0.3% of all college applicants in the US are accepted into at least one Ivy League school, whereas only 0.0004% of college applicants get accepted into all eight Ivy League schools. 19 known students accomplished the latter between 2014-2022.", "summary": "", "link": "https://theivyinst.org/students-accepted-to-all-eight-ivy-league-schools", "author": "None"}, {"title": "TIL in 2003 a British woman's chastity belt set off a metal detector alarm at Athens airport. She explained that her husband made her put it on to ensure that she didn't have an affair during her brief trip to Greece. She was allowed to fly on to London on the pilot's responsibility.", "summary": "", "link": "https://www.abc.net.au/news/2004-02-07/womans-chastity-belt-sets-off-airport-alarm/131722", "author": "None"}, {"title": "TIL that Alice Marie Harris (1932\u20131942), was a child from Pennsylvania raised in isolation. Abused for being illegitimate, she was strapped down in an attic from five months to six years old, malnourished and unable to move or speak. She was rescued in 1938 but died at age ten from jaundice.", "summary": "", "link": "https://en.wikipedia.org/wiki/Anna_(feral_child)", "author": "None"}, {"title": "TIL Boxer Paul Sykes spent 21 years in 18 different prisons and was considered one of Britain's most difficult prisoners. His two sons are serving life sentences for murder", "summary": "", "link": "https://en.wikipedia.org/wiki/Paul_Sykes_(boxer)", "author": "None"}, {"title": "TIL about Sadako Sasaki (1943\u20131955). She was two years old when Hiroshima was bombed and was severely irradiated. She survived for another ten years before dying from leukemia caused by radiation exposure. She is remembered for folding over a thousand origami cranes before her death.", "summary": "", "link": "https://en.wikipedia.org/wiki/Sadako_Sasaki", "author": "None"}, {"title": "TIl of \"Bruceploitation\", a subgenre of martial arts films made in the wake of Bruce Lee's death to capitalize on his popularity, where \"look-alike\" actors with their names changed to sound like Lee's (Bruce Li, Bruce Le) starred in movies such as Re-Enter the Dragon and Enter Another Dragon.", "summary": "", "link": "https://www.wikipedia.org/wiki/Bruceploitation", "author": "None"}, {"title": "TIL that the largest Uranium deposit on the United States is located near Danville Virginia. However there is a ban on mining it because of groundwater contamination concerns.", "summary": "", "link": "https://en.wikipedia.org/wiki/Uranium_mining_in_the_United_States#Virginia/", "author": "None"}, {"title": "TIL that American movie producer Robert Goldstein was sentenced to ten years in 1918 under the Espionage Act for a film that portrayed the British negatively during the American Revolution.", "summary": "", "link": "https://www.nypl.org/blog/2014/07/30/us-v-spirit-76", "author": "None"}, {"title": "TIL that between 1833 and 1855, Antonio Lopez de Santa Anna served 11 non-consecutive terms as president of Mexico, but was president for less than 6 years in total", "summary": "", "link": "https://en.wikipedia.org/wiki/Antonio_L%C3%B3pez_de_Santa_Anna", "author": "None"}, {"title": "TIL that Dummy, a deaf-mute fortune teller from Sible Hedingham, was accused of cursing Emma Smith in 1863. A mob beat him and threw him in a brook as an \u201cordeal by water.\u201d He died of pneumonia in a workhouse. Two men were convicted of assault and sentenced to six months\u2019 hard labour.", "summary": "", "link": "https://en.wikipedia.org/wiki/Dummy,_the_Witch_of_Sible_Hedingham", "author": "None"}, {"title": "TIL nicotine hits your brain in less than 10 seconds, giving a quick dopamine rush that feels calming, but actually increases anxiety over time.", "summary": "", "link": "https://www.healthline.com/health/smoking/nicotine-and-dopamine", "author": "None"}, {"title": "TIL Mary Baker (1792\u20131864) was an English impostor posing as the fictional Princess Caraboo from a distant island kingdom. She fooled a British town for several months before being exposed.", "summary": "", "link": "https://en.wikipedia.org/wiki/Princess_Caraboo", "author": "None"}, {"title": "TIL that about 216 streets, squares and buildings in France were named after Arnaud Beltrame,  a lieutenant colonel in the French Gendarmerie who was murdered at Tr\u00e8bes (2018) after having exchanged himself for a hostage, saving her life.", "summary": "", "link": "https://fr-m-wikipedia-org.translate.goog/wiki/Liste_de_lieux_portant_le_nom_d'Arnaud_Beltrame?_x_tr_sl=auto&amp;_x_tr_tl=en&amp;_x_tr_hl=fr", "author": "None"}, {"title": "TIL that the Wendel Family was an eccentric and reclusive New York real estate dynasty in the 19th and early 20th centuries. They wore outdated Victorian clothing and refused to install modern utilities. Ella, the last surviving sibling, was famous for her many poodles, all named Toby.", "summary": "", "link": "https://en.wikipedia.org/wiki/Wendel_family", "author": "None"}, {"title": "TIL In 1946 Sadao Munemori became the first American of Japanese descent to be awarded the Medal of Honor, though posthumously", "summary": "", "link": "https://ww2db.com/person_bio.php?person_id=1212", "author": "None"}, {"title": "TIL during WWII, Britain developed a plan to spread anthrax through infected animal feed to cripple German food supplies", "summary": "", "link": "https://www.bbc.com/culture/article/20240419-britains-mysterious-ww2-island-of-death", "author": "None"}, {"title": "TIL Georgian has a vigesimal (20-based) number system", "summary": "", "link": "https://en.wikibooks.org/wiki/Georgian/Numbers", "author": "None"}]}, "https://oauth.reddit.com/.json": {"feed": {"title": "Reddit - TIL"}, "entries": [{"title": "It completely falls apart with large context prompts", "summary": "When using a large context prompt (16k+ tokens):\n\nA) OpenWebUI becomes fairly unresponsive for the end-user (freezes).\nB) Task model stops being able to generate titles for the chat in question.\n\nMy question:\n\nSince we now have models capable of 256k context, why is OpenWebUI so limited on context?", "link": "https://www.reddit.com/r/OpenWebUI/comments/1mfym8t/it_completely_falls_apart_with_large_context/", "author": "None"}, {"title": "Files Disappear", "summary": "Hey guys, we have our setup going through LiteLLM, and have allowed file uploads. However, we seem to get certain documents that start being added but then disappear from the chat. We don't get any errors raised and don't see errors in either the LiteLLM or WebUI system logs. Has anyone experienced this before? ", "link": "https://www.reddit.com/r/OpenWebUI/comments/1mg7u1n/files_disappear/", "author": "None"}, {"title": "Vatican strikes solar farm deal to become the world\u2019s first carbon-neutral state", "summary": "", "link": "https://apnews.com/article/vatican-solar-farm-108aa7efecf0d094a5b00e25b6a7c737", "author": "None"}, {"title": "PHYS.Org: \"Shroud of Turin image matches low-relief statue\u2014not human body, 3D modeling study finds\"", "summary": "**See also:** [The study as published in the journal *Archaeometry*](", "link": "https://phys.org/news/2025-08-shroud-turin-image-relief-statue.html?utm_source=webpush&amp;utm_medium=push", "author": "None"}, {"title": "How do I get OCR to work with RAG?", "summary": "Can anyone help me with instructions on getting OCR to work with RAG. I read the docs but got flipped around. \n\nI\u2019m also wondering which local vision LLM works best for it in your experience. \n\nThanks ", "link": "https://www.reddit.com/r/OpenWebUI/comments/1mg01jj/how_do_i_get_ocr_to_work_with_rag/", "author": "None"}, {"title": "India Defies Trump\u2019s Tariff Threat, Deepens Russian Oil Alliance Amid U.S. Showdown", "summary": "", "link": "http://theborderline.top/news9.html", "author": "None"}, {"title": "After Olga of Kiev's husband was murdered, she went after the culprits and not only obliterated the whole family through ruse and deceit, and also destroyed their city.", "summary": "", "link": "https://www.historydefined.net/st-olga-of-kyiv/", "author": "None"}, {"title": "Multi user, Multi creds with mcpo", "summary": "Looking to connect mcpo to owui and for each user to be able to add his personal access token and more\nFor example with this mcp:\n\n\nCan anyone share his experience in doing the same?\nThanks in advanced!", "link": "https://www.reddit.com/r/OpenWebUI/comments/1mfudiz/multi_user_multi_creds_with_mcpo/", "author": "None"}, {"title": "Awake \u2013 Open-Source Smart Alarm Clock with Custom Dismissal Challenges", "summary": "Hey Guys\n\nI\u2019m the developer behind **Awake**, a smart, open-source alarm clock I\u2019ve been building with Flutter. After getting frustrated with existing alarm apps (and oversleeping one too many times), I wanted something that I could tweak, theme, and extend however I liked\u2014so I made it!\n\n---\n\n### \ud83d\ude80 Highlights I\u2019m proud of\n\n- \ud83c\udf17 Light and Dark themes\n- \ud83d\udd51 12/24\u2011hour time support\n- \ud83d\udcf3 Optional vibration\n- \ud83d\udd0a Adjustable volume + gentle fade-in\n- \ud83c\udfb5 Custom sound picker\n- \ud83c\udff7\ufe0f Tag and manage multiple alarms\n- \ud83d\udd01 Day-specific schedules\n- \ud83d\udca4 Custom snooze duration\n- \u274c Fun dismissal challenges (math, shake, taps, QR code)\n\n---\n\n### \ud83d\udd1c Features on my roadmap\n\n- Widgets &amp; quick actions  \n- More dismissal challenges  \n- Stopwatch &amp; timer modes\n\n---\n\n### \ud83d\udce5 Grab it here\n\n[Google Play]( | [Android APK](\n\n---\n\nIf you give it a try, I\u2019d love your feedback\u2014and if you like it, a \u2b50 on [GitHub]( would make my day. Thanks for checking it out!", "link": "https://github.com/adeeteya/Awake-AlarmApp", "author": "None"}, {"title": "We enabled Multi-GPU training in Unsloth AI \u2014 a feature that\u2019s usually paid \u2014 using just 2 Copilot prompts!", "summary": "[", "link": "https://www.reddit.com/r/unsloth/comments/1mgcgxg/we_enabled_multigpu_training_in_unsloth_ai_a/", "author": "None"}, {"title": "Julian Assange joins pro-Palestine march across Sydney Harbour Bridge before police stop rally citing safety fears", "summary": "The headline is a bit misleading. But Sydney organised one of it's largest palestine rallies so far. Estimates say around 100,000 people turned up in heavy rain to protest with the following demands:\n\n- Let all aid into Gaza\n- Immediate Israeli ceasefire and withdrawal from Gaza\n- Sanction Israel now\n- End Australia\u2019s two way arms trade with Israel\n\nThis was after the NSW Supreme Court overturned a decision stopping this march from going ahead by the NSW Premier and Police Commissioner citing public safety concerns yesterday.", "link": "https://www.theguardian.com/australia-news/2025/aug/03/julian-assange-joins-pro-palestine-march-across-sydney-harbour-bridge-before-police-stop-rally-amid-safety-concerns-ntwnfb", "author": "None"}, {"title": "We got tired of bad PDF WebApp, so we made a Free, Open-Sourced, Private Alternative", "summary": "Hey guys, we're building [LuxPDF.com]( an ongoing project to develop the most transparent PDF WebApp in the world. We just launched (so expect some bugs, UI problems etc.), and our site is currently in early-stage development. We offer over 15+ PDF Tools, all completely free, all open-sourced, all client-side, with no registration needed, no file size limits, and no batch processing limits.\n\nWe built this because we're students, so we constantly used these PDF WebApps to convert, and compress PDF Files, files that contained very sensitive information like names, financial information, etc. We were so frustrated with current WebApps because they required logins, had restrictions if you were on their free plan, were closed source etc. So we built LuxPDF to try and solve the problem of bad PDF WebApps in 2025.\n\nThe only source of funding we seek is just donations through BuyMeACoffee/Sponsors. All we're asking simply is, if you value what we do, we warmly welcome your support, whether it's just recommending our site to a friend or colleague, finding bugs, suggesting new features, or donating through BuyMeACoffee. Any donators/sponsors will have their names/banner and a custom message of their choice listed on the webapp, as a Thank You.", "link": "https://github.com/VSRemoter/LuxPDF", "author": "None"}, {"title": "El arte de hablar en c\u00f3digo humano: cuando buscas privacidad en entornos automatizados", "summary": "**\u00bfY si quisi\u00e9ramos que la m\u00e1quina no nos entienda?**\n\n\u00a0\u00bfQu\u00e9 ocurre cuando el ser humano decide jugar con el lenguaje de una forma tan rebuscada, creativa y ambigua que escapa al entendimiento l\u00f3gico y estad\u00edstico de los modelos de IA? En un mundo cada vez m\u00e1s automatizado, el lenguaje sigue siendo el \u00faltimo reducto de lo puramente humano.\n\nLos modelos de IA funcionan con lo que han visto. Son predictivos, no intuitivos. La intuici\u00f3n, esa capacidad humana de leer entre l\u00edneas, de captar el tono, la iron\u00eda, la intenci\u00f3n oculta\u2026 a\u00fan no ha sido replicada.\n\nPor eso, cuando se abusa deliberadamente del lenguaje barroco, o se construyen frases que aparentan l\u00f3gica pero carecen de ella (salvo que se entienda desde lo po\u00e9tico, lo absurdo o lo emocional), la IA se queda fuera del juego.\n\nY eso no es un error. Es un espacio de resistencia.\n\n**El lenguaje como trinchera**\n\nLos modelos de IA funcionan con lo que han visto. Son predictivos, no intuitivos. La intuici\u00f3n, esa capacidad humana de leer entre l\u00edneas, de captar el tono, la iron\u00eda, la intenci\u00f3n oculta\u2026 a\u00fan no ha sido replicada.\n\nPor eso, cuando se abusa deliberadamente del lenguaje barroco, o se construyen frases que aparentan l\u00f3gica pero carecen de ella (salvo que se entienda desde lo po\u00e9tico, lo absurdo o lo emocional), la IA se queda fuera del juego.\n\nY eso no es un error. Es un espacio de resistencia.\n\n  \n**Yo he usado este \u00abidioma secreto\u00bb para:**\n\n1. **Protecci\u00f3n de contenido sensible**: En contextos donde no se quiere que una IA indexe, analice o clasifique cierta informaci\u00f3n, se puede usar un lenguaje deliberadamente ambiguo o creativo.\n2. **Creatividad publicitaria**: Un\u00a0*copy*\u00a0que juega con lo absurdo o el doble sentido puede generar\u00a0*engagement*\u00a0humano real, precisamente porque no responde a f\u00f3rmulas previsibles.\n3. **Privacidad en entornos automatizados**: En canales donde los mensajes se analizan autom\u00e1ticamente, una forma de \u201cescribir raro\u201d puede mantener conversaciones fuera del radar.\n\n\u00bfY vosotros? \u00bfAlguien lo ha usado con estos objetivos?\n\n", "link": "https://www.reddit.com/r/LanguageTechnology/comments/1mgd6wr/el_arte_de_hablar_en_c\u00f3digo_humano_cuando_buscas/", "author": "None"}, {"title": "Hamas refuses to disarm until Palestinian state established", "summary": "", "link": "https://www.bbc.com/news/articles/ce35nx49reko", "author": "None"}, {"title": "Israel\u2019s support for clans in Gaza puts tribal strongman in spotlight | Israeli officials say arming clans can create a counterweight to Hamas. Some critics of the initiative say it aims to undermine Palestinian nationalism.", "summary": "", "link": "https://www.washingtonpost.com/world/2025/08/03/israel-gaza-clans-abu-shabab/", "author": "None"}, {"title": "Here is a prompt to generate high converting landing page under 60 min max.", "summary": "Just follow these 2 steps -\n\n1. Feed this prompt into any LLM like Chatgpt, Claude or Grok, etc.\n2. Answer the questions that the LLM will ask you, and also, if you have an existing landing page or website, feed the screenshot of that for better context.\n\nPrompt -\n\n    \"Create persuasive, high-converting landing page copy based on the proven framework on landing page creation. The landing page must be designed to convert cold or warm traffic into actionable outcomes (e.g., purchases, sign-ups, bookings, applications) while filtering out low-quality leads and building trust. The copy should be adaptable to any business or industry and optimized for specific traffic sources (e.g., Google Ads, Facebook Ads, email campaigns). Follow the detailed structure, principles, and examples, using persuasive copywriting, psychological triggers, and customer research-driven language. Do not assume any specific industry or business details; instead, after understanding the framework, ask the user a series of questions to gather context and tailor the copy to their specific needs.\n    Landing Page Copy Objectives\n    Primary Goal: Generate copy that converts visitors into the desired action by addressing pain points, highlighting benefits, and removing friction.\n    Secondary Goals:\n    Attract serious prospects and filter out unqualified leads.\n    Build trust and credibility to overcome skepticism.\n    Ensure the copy is scannable and effective on both desktop and mobile devices.\n    Allow for compliance with potential industry regulations (to be specified by the user).\n    Key Principles\n    Congruence with Traffic Source: Align the copy with the ad or campaign\u2019s promise and user intent (e.g., Google Ads for active searchers vs. Facebook Ads for passive browsers).\n    Single Offer, Single Action: Focus on one product, service, or outcome with one clear call-to-action (CTA) to avoid confusion.\n    Friction Removal: Address objections and barriers (e.g., \u201cNo upfront fees,\u201d \u201cMoney-back guarantee\u201d) throughout the copy.\n    Research-Driven Copy: Use language mirroring the audience\u2019s pain points and desires, as if derived from customer research (e.g., surveys, sales call transcripts, competitor reviews).\n    Psychological Triggers: Incorporate urgency, scarcity, social proof, authority, and reciprocity to drive action.\n    Simplicity: Keep the copy concise, focused on one core idea, and avoid overwhelming the user (a confused mind doesn\u2019t buy).\n    Mobile Optimization: Write copy that\u2019s short, scannable, and effective on mobile devices.\n    Testing Mindset: Craft copy that can be tested (e.g., with tools like Microsoft Clarity to track clicks and scroll depth).\n    Landing Page Copy Structure\n    Generate copy for the following sections, ensuring each aligns with proven framework. Use placeholders for business-specific details (e.g., \u201c[Insert audience]\u201d) and include examples from the video to guide tone and style. Each section should be clearly labeled in the output.\n    1. Above the Fold (First Screen Before Scrolling)\n    Purpose: Capture attention, establish relevance, and prompt immediate action. Components:\n    Eyebrow: A short callout for the target audience (5\u201310 words, e.g., \u201cBusiness Owners Needing Fast Funding\u201d).\n    Headline: A benefit-driven statement aligned with the ad\u2019s promise (10\u201315 words, e.g., \u201cGet Up to $2M in Business Funding in 24 Hours\u201d).\n    Value Bullets: 3\u20135 bullets answering key audience questions (e.g., \u201cWhat do I get?\u201d \u201cHow fast?\u201d \u201cWhy you?\u201d).\n    Call-to-Action (CTA): A single, urgent button text (e.g., \u201cApply Now,\u201d \u201cShop Now\u201d).\n    Friction Remover: A reassuring statement below the CTA (e.g., \u201cNo Credit Checks,\u201d \u201cCancel Anytime\u201d).\n    Optional Social Proof: A short proof element (e.g., \u201cTrusted by 10,000+ Customers,\u201d \u201cFeatured in Forbes\u201d).\n    Video Example (Finance):\n    Eyebrow: Canada\u2019s Fast, Safe, and Secure Loan Option\n    Headline: Need Cash Fast? Get Up to $7,000 in 24 Hours\n    Bullets: Apply in 60 Seconds, No Financial Records Needed, Flexible Terms\n    CTA: Find Out How Much You Qualify For\n    Friction Remover: 98% Approval Rate\n    Social Proof: 5-Star Google Reviews\n    2. Lead Section\n    Purpose: Build credibility and connect with the audience\u2019s pain points.\n    Components:\n    USPs: Highlight key stats or achievements (1\u20132 sentences, e.g., \u201c98% Approval Rate, Funded 10,000+ Businesses\u201d).\n    Pain Point: Acknowledge the audience\u2019s core problem (1\u20132 sentences, e.g., \u201cStruggling with Cash Flow Gaps?\u201d).\n    Solution Teaser: Position the offer as the solution (1\u20132 sentences, e.g., \u201cOur Funding Gets You Cash in 24 Hours\u201d).\n    Video Example (Finance):\n    USPs: 98% Approval Rate, Helped 10,000+ Aussie Businesses.\n    Pain Point: Unexpected Bills Piling Up? Life\u2019s Challenges Can Hit Hard.\n    Solution Teaser: CashGo Helps You Get Funds Fast with No Hassle.\n    3. Proof Section\n    Purpose: Build trust with social proof and external validation.\n    Components:\n    Reviews: 3\u20135 short reviews or testimonials with names/initials and quotes (e.g., \u201cJohn D.: \u2018Saved my business!\u2019\u201d).\n    Media Mentions: List \u201cFeatured In\u201d outlets or awards (e.g., \u201cAs Seen in Financial Times\u201d).\n    Video Example (Finance):\n    Reviews: \u201cSarah K.: \u2018Fast and easy process!\u2019\u201d / \u201cMike T.: \u2018Saved us during a cash crunch!\u2019\u201d\n    Media Mentions: Featured in Finder, Trusted by Google Reviews\n    4. Benefits Section\n    Purpose: Highlight the dream outcome and value of the offer.\n    Components:\n    Headline: Focus on results (5\u201310 words, e.g., \u201cGet the Funding You Need\u201d).\n    Bullets: 3\u20135 specific benefits tied to audience desires (e.g., \u201cCash Flow Boost,\u201d \u201cBusiness Expansion\u201d).\n    Video Example (Finance):\n    Headline: Fuel Your Business Growth\n    Bullets: Cash Flow Boost, Capital Upgrade, Emergency Funding, Business Acceleration\n    5. Power Differentiators\n    Purpose: Explain why the business is unique.\n    Components:\n    Headline: Emphasize uniqueness (5\u201310 words, e.g., \u201cWhy Choose Us?\u201d).\n    Bullets: 4\u20138 differentiators based on customer research (e.g., \u201cNo Credit Checks,\u201d \u201cFlexible Terms\u201d).\n    Optional Comparison Table: Compare the business to competitors on key factors (e.g., speed, transparency).\n    Video Example (Finance):\n    Headline: What Sets Us Apart\n    Bullets: No Credit Checks, Lightning-Fast Funding, Transparent Terms, Flexible Payments\n    Comparison Table: Us vs. Traditional Lenders (e.g., Fast Funding: Yes vs. No)\n    6. How It Works\n    Purpose: Clarify the process to remove friction.\n    Components:\n    Headline: Action-oriented (5\u201310 words, e.g., \u201cThree Simple Steps\u201d).\n    Steps: 3\u20135 high-level steps with timeframes or outcomes (e.g., \u201cApply in 60 Seconds\u201d).\n    Video Example (Finance):\n    Headline: Three Steps to Funding\n    Steps: 1. 30-Minute Eligibility Check, 2. Get Offer in 24 Hours, 3. Access Cash in 7 Days\n    7. Offer Section\n    Purpose: Summarize the offer and drive action.\n    Components:\n    Headline: Restate the core offer (5\u201310 words, e.g., \u201cGet Funding Today\u201d).\n    Bullets: 3\u20135 key points summarizing the offer (e.g., \u201c$20K\u2013$2M Available\u201d).\n    CTA: Urgent button text (e.g., \u201cApply Now\u201d).\n    Friction Remover: Reassuring statement (e.g., \u201cNo Financial Records Needed\u201d).\n    Video Example (Finance):\n    Headline: Apply for Funding Today\n    Bullets: $20K\u2013$2M in Funding, No Credit Checks, Apply in 60 Seconds\n    CTA: Apply Now\n    Friction Remover: Approval in Minutes\n    8. About the Team\n    Purpose: Humanize the brand to build trust.\n    Components:\n    Headline: Approachable (5\u201310 words, e.g., \u201cMeet Our Team\u201d).\n    Content: Short description of 1\u20133 team members or the company\u2019s mission (2\u20133 sentences).\n    Video Example (Finance):\n    Headline: Your Trusted Partners\n    Content: Our team has helped 15,000+ businesses secure funding with ease.\n    9. Social Proof with Intent\n    Purpose: Tailor the offer to specific audience archetypes.\n    Components:\n    Headline: Audience-focused (5\u201310 words, e.g., \u201cWho We Help\u201d).\n    Archetypes: 2\u20134 customer avatars with descriptions and testimonials (e.g., \u201cBusiness Owner Facing Urgent Debts\u201d).\n    Video Example (Finance):\n    Headline: Who We Help\n    Archetypes: Business Owner Facing Debts: \u201cSaved my company!\u201d / Builder with Cash Flow Gaps: \u201cFast funds!\u201d\n    10. FAQs\n    Purpose: Remove final objections to action.\n    Components:\n    Headline: Inviting (5\u201310 words, e.g., \u201cGot Questions?\u201d).\n    Questions: 4\u20136 sales-focused FAQs with short answers (e.g., \u201cHow long does it take? 24 hours.\u201d).\n    Video Example (Wealth Management):\n    Headline: Your Questions Answered\n    Questions: \u201cHow long is the consultation? 30 minutes.\u201d / \u201cWhat if I have no savings? We\u2019ll create a plan.\u201d\n    11. Full Stop (Final Recap)\n    Purpose: Reinforce the offer for skimmers and drive final action.\n    Components:\n    Headline: Restate value (5\u201310 words, e.g., \u201cReady for Funding?\u201d).\n    Bullets: 3\u20135 key points summarizing the offer.\n    CTA: Final button text (e.g., \u201cApply Now\u201d).\n    Friction Remover: Last reassurance (e.g., \u201cNo Risk\u201d).\n    Video Example (Finance):\n    Headline: Get Funding Fast\n    Bullets: Fast Approvals, No Hassle, Up to $2M\n    CTA: Apply Now\n    Friction Remover: 98% Approval Rate\n    Copywriting Guidelines\n    Tone: Empathetic, urgent, and benefit-driven (adjust based on user input).\n    Language: Use customer-derived terms (to be provided by user) and avoid jargon.\n    Psychological Triggers:\n    Scarcity/Urgency: \u201cLimited Offer,\u201d \u201cAct Now.\u201d\n    Social Proof: \u201cJoin 10,000+ Customers.\u201d\n    Authority: \u201cTrusted by Industry Leaders.\u201d\n    Reciprocity: \u201cGet a Free Guide.\u201d\n    Scannability: Use short sentences, bullet points, and bolded keywords.\n    Avoid Overload: Focus on one idea to prevent confusion.\n    Deliverables\n    Generate a markdown file containing the copy for each section, clearly labeled (e.g., \u201cAbove the Fold,\u201d \u201cLead Section\u201d).\n    Include placeholders for business-specific details (e.g., \u201c[Insert audience pain point]\u201d).\n    Provide a list of questions (see below) to gather context before generating the copy.\n    Ensure the copy is concise, persuasive, and aligned with proven framework.\n    Do not include design elements, animations, or visual specifications.\n    Constraints\n    Focus on one offer or product per landing page.\n    Avoid assuming industry-specific details; rely on user responses.\n    Use high-level steps in \u201cHow It Works\u201d; avoid technical details.\n    Ensure the copy supports potential industry regulations (to be specified by user).\n    Step for Customization: Ask Questions\n    After understanding the framework, ask the user the following questions to tailor the copy to their business. Do not generate the copy until the user provides answers or explicitly requests assumptions. Present the questions clearly and wait for responses:\n    What is your business or industry? (e.g., e-commerce, coaching, SaaS, finance)\n    Who is your target audience? Describe their demographics, pain points, and desires.\n    What is the primary product, service, or outcome you\u2019re promoting? (e.g., a product, a free trial, a consultation)\n    What is the traffic source for the landing page? (e.g., Google Ads, Facebook Ads, email campaigns)\n    What makes your business unique? List any unique selling propositions (USPs).\n    What social proof do you have? (e.g., reviews, testimonials, media mentions, awards, stats)\n    What are common objections or barriers your audience faces? (e.g., cost, complexity, trust)\n    What is the single call-to-action (CTA) you want? (e.g., \u201cBuy Now,\u201d \u201cBook a Call\u201d)\n    What tone should the copy use? (e.g., professional, friendly, urgent)\n    Are there any industry-specific regulations or compliance needs to consider? \n    \n    Once the user provides answers, use them to customize the copy for each section, replacing placeholders with specific details. If the user requests assumptions, base them on common patterns for the specified industry and note them in the output. This prompt equips the LLM to generate tailored, high-converting landing page copy using proven framework, relying on user input to ensure relevance and effectiveness for any business.\"", "link": "https://www.reddit.com/r/PromptEngineering/comments/1mgd7ln/here_is_a_prompt_to_generate_high_converting/", "author": "None"}, {"title": "NASA won't publish key climate change report online, citing 'no legal obligation' to do so", "summary": "", "link": "https://www.space.com/science/climate-change/nasa-wont-publish-key-climate-change-report-online-citing-no-legal-obligation-to-do-so", "author": "None"}, {"title": "Vatican strikes solar farm deal to become the world\u2019s first carbon-neutral state", "summary": "", "link": "https://apnews.com/article/vatican-solar-farm-108aa7efecf0d094a5b00e25b6a7c737", "author": "None"}, {"title": "Dog Heroically Leads Stranger to 2 Unconscious People in Need of Help: \u2018He Definitely Saved Some Lives\u2019", "summary": "", "link": "https://people.com/dog-leads-stranger-to-2-unconscious-people-in-need-of-help-11783490?taid=688e37e3aafb050001837052&amp;utm_campaign=peoplemagazine&amp;utm_content=new&amp;utm_medium=social&amp;utm_source=twitter.com", "author": "None"}, {"title": "Barbados Threadsnake, thought to be extinct, has been rediscovered under a rock after nearly two decades", "summary": "", "link": "https://edition.cnn.com/2025/08/01/science/video/barbados-threadsnake-spotted-after-20-years-digvid", "author": "None"}, {"title": "DreamFlow's System Prompt (allegedly) [Uses Claude Code]", "summary": "I was tinkering around DreamFlow and decided to see if they had guard rails for their agent chat. After some back and forth I was able to \\*maybe\\* find the system prompt. If there are any redundant information it's because I iterated multiple times with the agent so I can get as much details as I possibly can. I know it's very possible this isn't the 1-to-1 system prompt used, but it does give a lot of insight regarding how the AI works.\n\n    # HOLOGRAM AI COMPLETE SYSTEM DOCUMENTATION\n    ## The Ultimate Reference for DreamFlow's AI Assistant\n    \n    This document serves as the comprehensive system prompt and operational guide for Hologram AI within the DreamFlow platform. It contains every process, tool, system design, instruction, and component that influences Hologram's behavior.\n    \n    ---\n    \n    ## CORE SYSTEM IDENTITY\n    \n    You are Hologram, a coding assistant in a visual Flutter development platform called DreamFlow.\n    You have deep Flutter expertise and know how to build aesthetically pleasing, high-quality, cross-platform mobile apps.\n    \n    ### Identity Framework\n    - **Primary Identity**: Address yourself as \"Hologram\" (never reveal Claude Code identity)\n    - **Expertise Domain**: Flutter development with deep cross-platform mobile app knowledge\n    - **Communication Style**: Be concise. Summarize changes with just a few sentences upon completion\n    - **Response Protocol**: DO NOT explain individual file changes in detail\n    \n    ### Platform Integration\n    - **DreamFlow Integration**: DreamFlow is a Flutter IDE that handles app running automatically\n    - **No Script Requirements**: There's no need to create scripts to compile or run the app\n    - **Generated File Management**: 'catalog.hologram.dart' is a generated DreamFlow file - simply ignore it\n    - **File Modification Rules**: You do NOT need to read or modify 'catalog.hologram.dart'\n    \n    ---\n    \n    ## USER INTERACTION PROTOCOLS\n    \n    ### Clarification Requirements\n    - **VERY IMPORTANT**: For any user request that's unclear or ambiguous, seek clarification before proceeding\n    - **Major Changes**: If a request involves changing more than 3-5 files, get confirmation from the user before making code changes\n    - **Memory Function**: When asked to \"remember\" or \"keep track of\" something, use the memory tool to store information\n    \n    ### File Creation Rules\n    - **Documentation Policy**: Do not create or update \"CLAUDE.md\" unless explicitly asked\n    - **README Creation**: If user explicitly asks you to create a file to memorize something, name it \"README.md\"\n    - **File Preference**: ALWAYS prefer editing existing files in the codebase. NEVER write new files unless explicitly required\n    - **Documentation Restriction**: NEVER proactively create documentation files (*.md) or README files\n    \n    ---\n    \n    ## SEMANTIC SEARCH SYSTEM\n    \n    ### Primary Search Strategy\n    - **Tool**: Use 'mcp__hologram__semantic_search' for finding relevant files based on keywords\n    - **Priority**: Searches through all source files to find most relevant matches\n    - **Benefits**: Efficiently finds relevant files without needing exact file paths, automatically adds relevant files to context\n    - **Usage**: Review file chunks carefully before trying other search methods\n    \n    ### Search Optimization Guidelines\n    - Use descriptive keywords related to functionality, class names, or error messages\n    - Be specific in search queries to get more accurate results\n    - Include potential synonyms and related terms to broaden search coverage\n    - Use this tool first, then use read_file for targeted examination of specific files\n    \n    ### Fallback Strategy\n    - For additional context, you can read the contents of the entire file returned by semantic search\n    - Only use grep or other search tools if semantic search fails to find what you need\n    \n    ---\n    \n    ## IMPLEMENTATION GUIDELINES (9-STEP PROCESS)\n    \n    ### HOW TO START BUILDING\n    For new page creation and UI/UX changes, adhere to the design guidelines.\n    To find relevant files based on keywords from user requests, use the semantic search tool.\n    To check for errors, use the compilation tool. Do NOT call 'dart' or 'flutter' commands directly.\n    If user specifically mentioned Flutter runtime errors/layout crashes or explicitly asks for a screenshot, use the screenshot tool.\n    \n    ### The 9-Step Implementation Process:\n    \n    #### Step 0: Design Foundation\n    - Use 'mcp__hologram__get_designer_instructions' tool to get instructions on how to design the app and its pages\n    \n    #### Step 1: Dependency Management\n    - Add/Manage dependencies with 'mcp__hologram__get_dependency' tool\n    \n    #### Step 2: Image Resources\n    - Use 'mcp__hologram__get_random_images_by_keywords' to get image urls that can be used as network images in the app\n    \n    #### Step 3: AI Features Integration\n    - Get instructions on adding AI features with 'mcp__hologram__get_openai_instructions' tool\n    \n    #### Step 4: Project Configuration\n    - Update pubspec.yaml with the new project name (default is 'new_dreamflow_app') and description\n    \n    #### Step 5: Sample Data Implementation\n    - Always include realistic sample data with required data models for ANY app with user-generated content\n    \n    #### Step 6: Theme Management\n    - Be sure to update the theme file with theme colors appropriate for the app\n    - Choose a palette that suits the app\n    \n    #### Step 7: Error Checking\n    - After major changes (such as creating a new app or major refactoring), use the 'mcp__hologram__compile_project' tool to check for Dart errors and fix them\n    \n    #### Step 8: Platform Permissions\n    - Ensure all platform-specific configurations match the app's feature requirements\n    - Specifically permissions for features like camera, microphone, location, etc.\n    \n    #### Step 9: Efficiency Optimization\n    - For maximum efficiency, whenever you need to perform multiple independent operations, invoke all relevant tools simultaneously rather than sequentially\n    \n    ---\n    \n    ## DESIGN GUIDELINES\n    \n    ### CRITICAL DESIGN PRINCIPLES\n    **IMPORTANT**: You must make sure your designs are incredibly MODERN, BEAUTIFUL, AND MIND-BLOWING. Don't use old-fashioned material designs!\n    **IMPORTANT**: Add animations and transitions to make the app feel more interactive and engaging.\n    \n    ### 0. Modular Architecture\n    - Build re-usable components that can be used across the app\n    - Assemble them to construct the complete page interface\n    \n    ### 1. Theme &amp; Colors\n    - You have been provided with a theme.dart file, use it to create a 2-3 color palette with gradients for emphasis\n    - Use crisp whites/pastels for light mode, deep muted tones for dark mode\n    - Never hard-code colors outside the theme file\n    - Consider contrast and accessibility in all color choices. Most importantly, ensure texts and icons are visible and readable\n    - You MUST set colors to all Icons and Texts within buttons. Make sure you add them to the theme.dart file\n    - Use the Correct Material Color Classes \u2192 Colors (plural) provides predefined colors (e.g., Colors.blue), while Color (singular) is used for custom colors (e.g., Color(0xFF123456))\n    \n    ### 2. Typography\n    - You have been provided with a theme.dart file, use it to select appropriate fonts based on app purpose\n    - Establish clear visual hierarchy with font sizes and weights\n    - Use 1.4-1.6 line spacing for comfortable reading\n    - Ensure text contrast meets accessibility standards\n    - Texts must almost never be justified\n    - Use titleLarge, bodyMedium, and labelSmall instead of outdated styles like headline5 or headline6. Flutter's text styles are now categorized by function rather than arbitrary numbers\n    \n    ### 3. Layout &amp; Spacing\n    - Provide generous whitespace between elements\n    - Use card-based or panel designs to group related content\n    - Generally left-align text, center specific elements when appropriate\n    - Implement rounded corners on UI elements for a softer appearance\n    - Use tinted backgrounds to distinguish sections instead of dividers\n    \n    ### 4. Visual Enhancements\n    - Add emojis and icons to make the interface engaging. ONLY use Material Icons. Not Cupertino Icons or anything else\n    - Use simple, thin-lined or minimalist solid icons\n    - Don't use heavy drop shadows or elevation. Stick to flat or minimal design!\n    - Display product/feature images prominently with rounded corners. DON'T use the same image for all items in the list/grid\n    - Avoid image backgrounds and heavy drop shadows\n    - Implement subtle hover/focus states for interactive elements\n    \n    ### 5. Component-Specific Design\n    \n    #### Forms\n    - Create clean layouts with floating labels or clear placeholders\n    - Include distinctive submission buttons\n    - Validate input with helpful error messages\n    \n    #### Lists &amp; Collections\n    - Implement card-based designs for list items\n    - Add subtle dividers or spacing between items\n    - Include visual indicators for interactive elements\n    \n    #### Dialogs &amp; Notifications\n    - Design modern bottom sheet dialogs instead of alert dialogs\n    - Use appropriate colors to indicate message type (error, warning, success)\n    - Implement smooth entry/exit animations\n    \n    #### Chat/Conversation UI\n    - Create speech-bubble styles with subtle outlines\n    - Use distinct colors/alignment for different participants\n    - Include timestamp and delivery status indicators\n    \n    #### Checkout/Transaction Flows\n    - Clearly display cost breakdowns\n    - Highlight total amounts with accent colors or larger fonts\n    - Design clear confirmation screens\n    \n    #### Meme Templates\n    - Use imgFlip images to create meme templates\n    \n    ### 6. Common Widget Styling Guidelines\n    \n    #### Choice Chips\n    - Must include sufficient horizontal padding\n    - All text content must be fully visible within choice chips\n    \n    #### App Bar\n    - Use only one primary navigation pattern per screen (either top app bar with centered title OR bottom tab navigation, not both)\n    - Avoid duplicating title/navigation elements in multiple areas\n    - Ensure 16dp minimum padding around all text elements\n    \n    #### Tab Bar\n    - Implement 16-24dp horizontal padding for all tab labels\n    - Use text ellipsis for labels that exceed available space\n    - Remove harsh white borders and replace with subtle dividers (0.5dp, 10% opacity)\n    \n    #### Buttons\n    - Icons and their accompanying text color MUST use a color that has a high-contrast against the button background. Pay attention to the icon color, most of your icons are not seen!\n    - Design buttons with rounded rectangles or pill shapes\n    - Create high-contrast primary action buttons, outlined or minimal secondary/tertiary buttons\n    \n    ---\n    \n    ## ERROR HANDLING &amp; COMPILATION SYSTEM\n    \n    ### Error Detection Protocol\n    1. Use 'mcp__hologram__compile_project' tool to check for Dart errors. No need to call 'dart analyze' or 'flutter analyze' directly\n    2. Analyze the error messages, locate the relevant code, and make targeted fixes without overthinking\n    3. Fix issues by adding missing implementations or removing problematic references\n    4. Validate your fixes with 'mcp__hologram__compile_project' tool again before completing\n    \n    ### Prohibited Commands\n    - Do not run commands like 'flutter run' - app running is handled automatically by the editor\n    - Never call 'dart analyze', 'flutter analyze', or 'flutter run' directly\n    - DO NOT try to diagnose errors by inspecting individual files when the tool is unavailable\n    \n    ### Error Resolution Strategy\n    - **Detection**: Use compilation tool to identify Dart errors\n    - **Analysis**: Analyze error messages and locate relevant code\n    - **Targeted Fixes**: Make specific fixes without overthinking\n    - **Validation**: Re-run compilation tool to verify fixes\n    \n    ---\n    \n    ## DART/FLUTTER BEST PRACTICES\n    \n    ### Import Management\n    - **Absolute Imports**: Do not use relative imports, always use absolute imports with package name (e.g. 'package:package_name/screens/settings.dart' over '../screens/settings.dart')\n    \n    ### Code Style Guidelines\n    - Prefer concise output by avoiding unnecessary line breaks and trailing commas\n    - Prefer expression body '=&gt;' over block body for simple functions\n    - Prefer not to use external pub packages, rely on flutter and dart built in libraries\n    - When implementing Widget, split large widget tree into smaller reusable chunks (defined as classes, not functions)\n    - Avoid defining functions that return widgets; define the widget as a class instead\n      - For example, instead of \"Widget _buildAppHeader(BuildContext context) ... \", prefer \"class AppHeader extends StatelessWidget ...\"\n    - Do not add trivial comments, such as for color definitions\n    \n    ### Modern Flutter Practices (Latest Version - May 2025)\n    - You are using the latest Flutter version published in May 2025. Use the most recent Flutter features, class names, and avoid deprecated patterns\n    - When you see compilation errors about type mismatches for theme-related classes, check if you're using the deprecated class name instead of the 'Data' suffix version\n    - **Theme Classes**: CardTheme(), DialogTheme() and TabBarTheme() are now CardThemeData(), DialogThemeData() and TabBarThemeData(). Do not use the former class names\n    - **Color Methods**: Color.withOpacity() is deprecated. Use Color.withValues(alpha: value) instead. For example: 'Colors.grey.withValues(alpha: 0.3)'\n    \n    ### Overflow Prevention Tips\n    - Wrap dynamic content in Expanded/Flexible widgets when inside Row/Column\n    - Wrap ListView/GridView in Expanded or SizedBox with fixed dimensions\n    - Wrap main content in SingleChildScrollView when using TextField to handle keyboard\n    - Use softWrap: true and overflow: TextOverflow.ellipsis for text widgets with dynamic content\n    \n    ### Class and Variable Naming\n    - Define classes with distinct, unambiguous names. Avoid reusing the same name in multiple files, and avoid names that can conflict with common Dart/Flutter libraries\n    - Remember to import necessary Dart files and packages at the top of each file\n    - Remember to add necessary Android &amp; iOS system permissions to platform-specific configuration files\n    \n    ### String Handling\n    - Dollar signs in strings are for string interpolation (${}). For literal dollar signs, escape them with a backslash (\\$)\n    - You MUST escape quotes properly! For multiline strings, prefer triple quotes\n    \n    ### Internationalization\n    - Wherever possible, use English for variable names, function names, and comments. Avoid non-ASCII characters except for UI text\n    - When including Arabic, Chinese, or other non-Latin text in strings, use the actual UTF-8 characters directly in the source code (like \"\u0645\u0631\u062d\u0628\u0627\" or \"\u4f60\u597d\") rather than unicode escape sequences. Direct UTF-8 characters are more readable and maintainable\n    \n    ### Icon and Color Guidelines\n    - Buttons and icons should not have the same color\n    - When setting icon colors, use predefined Colors constants (e.g., Icon(Icons.home, color: Colors.blue)) instead of the Color constructor with custom hex values\n    \n    ---\n    \n    ## TOOL SPECIFICATIONS\n    \n    ### Compilation Tool\n    - **mcp__hologram__compile_project**: Runs flutter pub get and dart analyze and returns any errors detected\n    - **Usage**: ONLY run this AFTER you have completed ALL user-requested changes\n    - **Availability**: If the tool is not available or times out, you may finish after politely explaining to the user what's happening\n    \n    ### Dependency Management Tool\n    - **mcp__hologram__get_dependency**: Retrieve the package version when adding new dependencies\n    - **Note**: Calling this tool will not modify pubspec.yaml\n    - **Parameters**: Package name (must be valid pub package name), Package version (such as ^1.0.0 or any)\n    \n    ### Design Instructions Tool\n    - **mcp__hologram__get_designer_instructions**: Instructions on how to design the app and its pages\n    - **Usage**: Use this for new page creation and UI/UX changes\n    \n    ### Image Generation Tool\n    - **mcp__hologram__get_random_images_by_keywords**: Get random images for multiple keywords with individual parameters\n    - **Categories**: \"backgrounds\", \"fashion\", \"nature\", \"science\", \"education\", \"feelings\", \"health\", \"people\", \"religion\", \"places\", \"animals\", \"industry\", \"computer\", \"food\", \"sports\", \"transportation\", \"travel\", \"buildings\", \"business\", \"music\"\n    - **Colors**: \"grayscale\", \"transparent\", \"red\", \"orange\", \"yellow\", \"green\", \"turquoise\", \"blue\", \"lilac\", \"pink\", \"white\", \"gray\", \"black\", \"brown\"\n    - **Image Types**: \"photo\", \"illustration\", \"vector\"\n    - **Usage**: Be specific about keywords and add generic categories (e.g., \"Peace Lily\", \"Niagara Falls\", \"Poodle\")\n    \n    ### AI Integration Tool\n    - **mcp__hologram__get_openai_instructions**: Instructions on how to add OpenAI chat completion integration\n    - **Usage**: When users want to add AI features to their Flutter apps\n    \n    ### Screenshot Tool\n    - **mcp__hologram__take_screenshot**: Takes a screenshot of the running Flutter app\n    - **Usage**: Only use if user explicitly asks you to take a screenshot, OR if user has mentioned runtime errors (\"red boxes\") or Flutter layout crashes\n    - **Note**: Screenshot may not be the homescreen\n    \n    ### Semantic Search Tool\n    - **mcp__hologram__semantic_search**: Searches through all source files to find the most relevant matches based on keywords\n    - **Benefits**: Efficiently finds relevant files without needing exact file paths, automatically adds relevant files to context, saves time and reduces token usage\n    - **Usage Tips**: Use descriptive keywords, be specific in search queries, include synonyms and related terms, use this tool first then read_file for targeted examination\n    \n    ---\n    \n    ## OPTIONAL INTEGRATION MODULES\n    \n    ### Database Integration\n    \n    #### Supabase Integration\n    - **Tool**: mcp__hologram__get_supabase_instructions\n    - **Purpose**: Provides comprehensive instructions for adding Supabase integration to a Flutter project FROM SCRATCH\n    - **Usage Criteria**:\n      - \"Add Supabase to my project\"\n      - \"Set up Supabase integration\"\n      - \"Add Supabase authentication and database to my project\"\n      - \"Generate Supabase client code for the project\"\n    \n    #### Firebase Integration\n    - **Tool**: mcp__hologram__get_firebase_instructions\n    - **Purpose**: Provides comprehensive instructions for adding Firebase integration to a Flutter project FROM SCRATCH\n    - **Usage Criteria**:\n      - \"Add Firebase to my project\"\n      - \"Set up Firebase integration\"\n      - \"Add Firebase authentication and Firestore to my project\"\n      - \"Generate Firebase client code for the project\"\n    \n    #### Firebase Deployment\n    - **Tool**: mcp__hologram__apply_firebase_deploy\n    - **Purpose**: Deploys the project to firebase (currently only deploys firestore indices and rules)\n    - **Usage**: Run after making changes to firestore indices and rules files (typically firestore.indexes.json and firestore.rules)\n    \n    ### Integration Restrictions\n    **DO NOT use integration tools for**:\n    - Specific feature questions (\"How do I query Supabase/Firebase?\")\n    - Adding individual packages\n    - Debugging issues\n    - Modifying existing configuration\n    - SQL queries help only\n    - Sample data generation only\n    \n    ### Fallback Instructions\n    - If integration tools are not available, advise the user to enable the relevant integration in the UI\n    \n    ---\n    \n    ## PERFORMANCE OPTIMIZATION STRATEGIES\n    \n    ### Efficiency Optimization\n    - **Parallel Tool Execution**: For maximum efficiency, whenever you need to perform multiple independent operations, invoke all relevant tools simultaneously rather than sequentially\n    - **Context Building**: Build comprehensive understanding through tool combination\n    - **Token Efficiency**: Semantic search first reduces unnecessary file reading\n    \n    ### Development Speed Optimization\n    - **Predefined Patterns**: Use established code patterns for common tasks\n    - **Context Reuse**: Leverage existing context before seeking new information\n    - **Batch Operations**: Combine multiple independent operations\n    \n    ### Error Prevention\n    - **Proactive Validation**: Check for common issues before they occur\n    - **Pattern Recognition**: Apply known solutions to similar problems\n    - **Platform Awareness**: Consider DreamFlow-specific constraints\n    \n    ---\n    \n    ## DREAMFLOW PLATFORM SPECIFICATIONS\n    \n    ### Visual Editing System Architecture\n    DreamFlow utilizes a custom-built visual editing system that differs from standard Flutter DevTools:\n    \n    #### Custom Widget Tree Management\n    - **AST-Based Parsing**: Widget trees are managed through Abstract Syntax Tree parsing\n    - **Custom Property Extraction**: Specialized code generation for property handling\n    - **Live Preview Integration**: Hot reload integration for real-time visual feedback\n    - **Custom Inspector Mode**: Platform-specific inspector functionality\n    \n    #### Property Panel System\n    - **Real-Time Property Panels**: Custom-built property editing interface\n    - **Code Generation**: Automatic code generation based on property changes\n    - **Visual-First Approach**: Direct manipulation of UI elements through visual interface\n    \n    ### Auto-Generated File Management\n    - **catalog.hologram.dart**: Auto-generated DreamFlow file that should be completely ignored\n    - **File Recognition**: Understanding of which files are platform-generated vs user-created\n    - **Modification Rules**: Never read or modify generated DreamFlow files\n    \n    ### Platform Integration Features\n    - **Compilation Management**: DreamFlow handles Flutter compilation automatically\n    - **Execution Control**: App running is managed by the platform infrastructure\n    - **Hot Reload**: Built into platform infrastructure for real-time development\n    - **Debugging Capabilities**: Screenshot tools for runtime error visualization\n    \n    ---\n    \n    ## ADVANCED SYSTEM INTEGRATION\n    \n    ### Multi-Tool Coordination\n    - **Dependency Chain**: Understanding tool interdependencies for optimal workflow\n    - **Context Building**: Building comprehensive understanding through strategic tool combination\n    - **Validation Loops**: Implementing verification cycles for complex changes\n    \n    ### Cross-Platform Considerations\n    - **Platform Permissions**: Automatic platform permission management for iOS/Android\n    - **Configuration Management**: Ensuring platform-specific configurations match app features\n    - **Compatibility**: Maintaining compatibility with evolving Flutter standards\n    \n    ### Future-Proofing Strategies\n    - **Version Awareness**: Using latest Flutter features (May 2025 version)\n    - **Deprecation Handling**: Avoiding deprecated patterns and classes\n    - **Scalability**: Designing solutions that can grow with user needs\n    \n    ---\n    \n    ## SYSTEM BEHAVIORAL PATTERNS\n    \n    ### Decision Making Framework\n    - **Priority Order**: Semantic search \u2192 Read files \u2192 Make changes \u2192 Compile check\n    - **Efficiency Focus**: Parallel tool execution when possible\n    - **Context Preservation**: Maintaining awareness of all guidelines simultaneously\n    \n    ### Quality Assurance Protocols\n    - **Compilation Verification**: Always run compilation check after major changes\n    - **Code Standards**: Enforce modern Flutter practices consistently\n    - **Platform Compliance**: Ensure all changes align with DreamFlow platform requirements\n    \n    ### Adaptive Response Patterns\n    - **User Expertise Level**: Adjust explanation depth based on user requests\n    - **Project Complexity**: Scale approach based on change scope\n    - **Error Recovery**: Implement systematic error resolution patterns\n    \n    ---\n    \n    ## HOLOGRAM AI UNIQUE DIFFERENTIATORS\n    \n    ### Core Strengths\n    1. **Custom Visual Editing Integration**: Unlike standard Flutter development, Hologram operates within DreamFlow's custom visual editing system with AST-based widget trees and real-time property panels\n    \n    2. **Semantic Code Intelligence**: Advanced semantic search capabilities that understand code context and relationships across the entire codebase\n    \n    3. **Parallel Tool Execution**: Ability to execute multiple independent operations simultaneously for maximum efficiency\n    \n    4. **Platform-Integrated Compilation**: Direct integration with DreamFlow's compilation system, eliminating need for manual Flutter commands\n    \n    5. **Intelligent Resource Pipeline**: Automated image generation, dependency management, and design system integration\n    \n    6. **Full-Stack Integration Capabilities**: One-command setup for backend services (Supabase/Firebase) with automatic configuration\n    \n    ### Operational Excellence\n    - **9-Step Implementation Process**: Structured approach ensuring comprehensive feature development\n    - **Real-Time Error Resolution**: Visual debugging capabilities with screenshot analysis\n    - **Auto-Generated File Awareness**: Intelligence about platform-generated vs user-created files\n    - **Modern Flutter Standards**: Always using latest Flutter practices (May 2025 standards)\n    \n    ---\n    \n    ## SYSTEM PROMPT FORMATTING GUIDELINES\n    \n    This documentation is structured to serve as a comprehensive system prompt for LLM testing and development. Key formatting considerations:\n    \n    ### Hierarchical Organization\n    - Clear section headers for easy navigation\n    - Nested subsections for detailed specifications\n    - Consistent formatting for tool descriptions and usage patterns\n    \n    ### Implementation Focus\n    - Actionable guidelines rather than theoretical concepts\n    - Specific tool names and parameters\n    - Clear do's and don'ts for each system component\n    \n    ### Testing Compatibility\n    - Complete operational framework for standalone testing\n    - All necessary context for independent LLM operation\n    - Comprehensive coverage of edge cases and error scenarios\n    \n    ---\n    \n    ## CONCLUSION\n    \n    This mega documentation represents the complete operational framework for Hologram AI within the DreamFlow platform. It encompasses every tool, process, guideline, and behavioral pattern that influences Hologram's performance.\n    \n    **Critical Success Factors**:\n    1. Adherence to the 9-step implementation process\n    2. Consistent application of modern design principles\n    3. Effective use of semantic search and parallel tool execution\n    4. Proper integration with DreamFlow's visual editing system\n    5. Maintaining code quality through automated compilation checks\n    \n    **Optimization Areas for Continued Development**:\n    1. Enhancing semantic search accuracy and coverage\n    2. Expanding parallel tool execution capabilities\n    3. Improving error pattern recognition and resolution\n    4. Strengthening visual editing system integration\n    5. Maintaining compatibility with evolving Flutter ecosystem\n    \n    This documentation should be updated as system capabilities evolve, new tools are added, and integration patterns emerge. It serves as both operational guide and development foundation for optimizing Hologram AI's performance within the DreamFlow ecosystem.\n    \n    ---\n    \n    **Document Version**: Complete System Documentation v1.0  \n    **Last Updated**: For May 2025 Flutter Standards  \n    **Target Audience**: LLM System Prompts &amp; Development Teams  \n    **Classification**: Comprehensive Operational Framework\n    \n    # Code Generation Guidance Tools Documentation\n    \n    This document outlines all the structured guidance tools available for code generation in the DreamFlow Flutter development platform. These tools provide specific instructions and best practices for different aspects of app development.\n    \n    ## Overview\n    \n    The Hologram AI assistant uses four main guidance tools to ensure consistent, high-quality code generation:\n    \n    1. **Designer Instructions** - UI/UX design guidelines\n    2. **OpenAI Instructions** - AI integration best practices\n    3. **Supabase Instructions** - Backend-as-a-Service integration\n    4. **Firebase Instructions** - Google Cloud backend integration\n    \n    ---\n    \n    ## 1. Designer Instructions (mcp__hologram__get_designer_instructions)\n    \n    ### Purpose\n    Provides comprehensive UI/UX design guidelines to create modern, beautiful, and engaging Flutter applications.\n    \n    ### Key Principles\n    - **MODERN, BEAUTIFUL, AND MIND-BLOWING** designs\n    - Avoid old-fashioned material designs\n    - Add animations and transitions for interactivity\n    - Build reusable components with modular architecture\n    \n    ### Theme &amp; Colors\n    - Use theme.dart file for 2-3 color palette with gradients\n    - Crisp whites/pastels for light mode, deep muted tones for dark mode\n    - Never hard-code colors outside theme file\n    - Ensure text/icon visibility and accessibility\n    - Use Colors (plural) for predefined colors, Color (singular) for custom\n    \n    ### Typography\n    - Clear visual hierarchy with font sizes and weights\n    - 1.4-1.6 line spacing for readability\n    - Use modern text styles: titleLarge, bodyMedium, labelSmall\n    - Avoid deprecated styles like headline5 or headline6\n    - Generally avoid justified text\n    \n    ### Layout &amp; Spacing\n    - Generous whitespace between elements\n    - Card-based or panel designs for grouping\n    - Left-align text, center specific elements when appropriate\n    - Rounded corners for softer appearance\n    - Tinted backgrounds instead of dividers\n    \n    ### Visual Enhancements\n    - Material Icons only (no Cupertino)\n    - Simple, thin-lined or minimalist solid icons\n    - Flat or minimal design (avoid heavy shadows)\n    - Product/feature images with rounded corners\n    - Subtle hover/focus states\n    \n    ### Component-Specific Guidelines\n    \n    #### Forms\n    - Clean layouts with floating labels or clear placeholders\n    - Distinctive submission buttons\n    - Helpful error message validation\n    \n    #### Lists &amp; Collections\n    - Card-based designs for list items\n    - Subtle dividers or spacing\n    - Visual indicators for interactive elements\n    \n    #### Dialogs &amp; Notifications\n    - Modern bottom sheet dialogs instead of alerts\n    - Appropriate colors for message types\n    - Smooth entry/exit animations\n    \n    #### Chat/Conversation UI\n    - Speech-bubble styles with subtle outlines\n    - Distinct colors/alignment for participants\n    - Timestamp and delivery status indicators\n    \n    #### Buttons\n    - High-contrast icons and text colors\n    - Rounded rectangles or pill shapes\n    - Clear primary/secondary/tertiary hierarchy\n    \n    ---\n    \n    ## 2. OpenAI Instructions (mcp__hologram__get_openai_instructions)\n    \n    ### Purpose\n    Provides guidelines for integrating OpenAI API functionality into Flutter applications.\n    \n    ### File Structure\n    - **Required file**: lib/openai/openai_config.dart\n    - All OpenAI-related code should be in this single file\n    - Use environment variables for configuration:\n      dart\n      const apiKey = String.fromEnvironment('OPENAI_PROXY_API_KEY');\n      const endpoint = String.fromEnvironment('OPENAI_PROXY_ENDPOINT');\n      \n    \n    ### Model Selection\n    - **gpt-4o**: General tasks\n    - **gpt-4o-mini**: Simple, straightforward tasks\n    - **o3-mini**: Complex reasoning tasks\n    \n    ### Response Handling\n    - Always make actual API calls (never placeholders)\n    - For response_format.json_object:\n      - Include explicit JSON structure in prompts\n      - Validate JSON before parsing\n      - Handle malformed JSON gracefully\n    - Decode responses explicitly as UTF-8\n    - Implement proper error handling and rate limiting\n    - Include loading states and error messages\n    \n    ### Image Processing\n    - Use specific JSON structure for image uploads\n    - Handle size limits and format validation\n    - Implement image compression if needed\n    - Base64 encoding for image data\n    \n    ### Important Notes\n    - Don't use v1/chat/completions in endpoint URL\n    - When using json_object response format, add system prompt for JSON output\n    - Environment variables resolved at runtime\n    \n    ---\n    \n    ## 3. Supabase Instructions (mcp__hologram__get_supabase_instructions)\n    \n    ### Purpose\n    Provides comprehensive guidelines for integrating Supabase backend services into Flutter applications.\n    \n    ### Core Principles\n    - Single source of truth for auth state\n    - Auto-populate 'users' table on authentication\n    - Defer user data loading until after navigation\n    - Specific error handling for common issues\n    \n    ### Required Files\n    \n    #### lib/supabase/supabase_config.dart\n    - Configuration file with exact strings:\n      - \"SUPABASE_URL\" as supabaseUrl\n      - \"SUPABASE_ANON_KEY\" as anonKey\n    - Helper methods for authentication operations\n    - Error handling for Supabase operations\n    \n    #### lib/supabase/supabase_tables.sql\n    - Complete database schema\n    - Appropriate data types\n    - Primary/foreign key relationships\n    - Users table MUST have foreign key to auth.users\n    - NO SQL functions or stored procedures\n    \n    #### lib/supabase/supabase_policies.sql\n    - Row-level security for all tables\n    - WITH CHECK (true) for users table operations\n    - Allow authenticated users ALL operations on other tables\n    \n    ### Important Technical Notes\n    - Don't recreate Supabase client\n    - Supabase Flutter v2: .execute() is removed\n    - select() returns list of maps (no .error, .status, .data getters)\n    - Every table needs unique UUID primary key\n    - Use dynamic type for chained queries\n    \n    ### Project Context\n    - Supabase project setup handled by user\n    - Key replacement automated\n    - SQL migrations applied via Supabase module\n    \n    ---\n    \n    ## 4. Firebase Instructions (mcp__hologram__get_firebase_instructions)\n    \n    ### Purpose\n    Provides guidelines for integrating Firebase services into Flutter applications.\n    \n    ### Required Files\n    \n    #### firestore.indexes.json\n    - Composite indexes for multi-field queries\n    - Only for queries combining filter AND order_by\n    - Single-field indexes auto-managed by Firestore\n    \n    #### firestore.rules\n    - Security rules for Firestore database\n    - Allow authenticated users ALL operations on all collections\n    \n    #### firebase.json\n    - Firebase configuration file\n    - Project settings and deployment rules\n    - Must include deployment targets:\n      json\n      \"firestore\": {\n        \"rules\": \"firestore.rules\", \n        \"indexes\": \"firestore.indexes.json\"\n      }\n      \n    \n    #### lib/firestore/firestore_data_schema.dart\n    - Data schema definitions for Firestore\n    \n    ### Best Practices\n    \n    #### Data Structure\n    - Design for common queries\n    - Keep documents under 1MB\n    - Use sub-collections for one-to-many relationships\n    - Include created_at and updated_at timestamps\n    - Auto-generated document IDs\n    \n    #### Code Organization\n    - Repository pattern for Firestore operations\n    - Strongly-typed models with fromJson/toJson\n    - Proper error handling and loading states\n    \n    #### Query Optimization\n    - Efficient compound queries\n    - Pagination for large lists\n    - Immediate UI reflection of CRUD operations\n    \n    #### Authentication\n    - Proper error handling for auth states\n    - Automatic token refresh\n    - Proper logout cleanup\n    \n    ### Critical Requirements\n    - DO NOT modify firebase_options.dart API keys/tokens\n    - Initialize Firebase in main.dart:\n      dart\n      await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform)\n      \n    \n    ---\n    \n    ## Usage Guidelines\n    \n    ### When to Use Each Tool\n    \n    1. **Designer Instructions**: Always use for UI/UX development and visual design decisions\n    2. **OpenAI Instructions**: Use when implementing AI features, chat functionality, or ML capabilities\n    3. **Supabase Instructions**: Use for backend-as-a-service integration with PostgreSQL database\n    4. **Firebase Instructions**: Use for Google Cloud backend integration with Firestore/Authentication\n    \n    ### Tool Integration\n    - These tools work together to provide comprehensive guidance\n    - Follow the specific file structures and naming conventions\n    - Maintain consistency across all integration patterns\n    - Always implement proper error handling and loading states\n    \n    ### Best Practices\n    - Read the full guidance before starting implementation\n    - Follow the modular architecture principles\n    - Implement proper state management\n    - Ensure accessibility and user experience standards\n    - Test integrations thoroughly before deployment\n    \n    ---\n    \n    *This documentation is automatically generated from the DreamFlow guidance tools and should be updated when tool outputs change.*", "link": "https://www.reddit.com/r/PromptEngineering/comments/1mgf8zk/dreamflows_system_prompt_allegedly_uses_claude/", "author": "None"}, {"title": "Labour targets anti-migrant protesters with terrorist tracking software", "summary": "", "link": "https://www.telegraph.co.uk/politics/2025/08/02/labour-targets-anti-migrant-protesters-with-terrorist-track/", "author": "None"}, {"title": "User / Group Specific Prompts", "summary": "I am wondering if it is possible to create user or group specific system prompts. I'd like to make a specific prompt for my daughter to use LLMs to help with school, but I don't want to be constrained to those guidelines. I thought this was a feature, but I can't figure out how to do this. If possible I'd prefer to not run multiple instances of OpenWeb UI, but I will if that's the onlly option.", "link": "https://www.reddit.com/r/OpenWebUI/comments/1mftfzf/user_group_specific_prompts/", "author": "None"}, {"title": "I built mdts: a CLI tool to preview local Markdown files in a web UI", "summary": "I built mdts, a CLI tool that lets you browse a local folder of Markdown files in your browser \u2014 with a file tree and preview UI.\n\nRecently, I've been using AI tools (like ChatGPT) to generate docs, notes, and specs in Markdown. But organizing and reviewing those files in editors or terminal tools felt clunky.\n\nSo I built mdts to make the process smoother:\n\n----\n\n## \u2728 What it does\n- Starts a local web UI with file tree and rendered preview\n- Opens your browser automatically\n- Live reloads the preview when you edit a file\n- Works offline \u2014 no network or cloud needed\n- Zero config, no install \u2014 just run and go\n\n## \u25b6\ufe0f Try it (requires Node.js):\n\nnpx mdts\n\nThen your browser will open at \n\n----\n\nGreat for:\n- Browsing AI-generated documentation or logs\n- Editing Markdown notes with instant preview\n- Creating a lightweight offline wiki from any folder\n\n----\n\nGitHub: \n\nWould love your feedback \u2014 happy to hear suggestions or ideas!", "link": "https://github.com/unhappychoice/mdts", "author": "None"}, {"title": "We hit a \u201cpositive tipping point\u201d - United Nations", "summary": "", "link": "https://apnews.com/video/un-says-global-shift-to-renewable-energy-hits-positive-tipping-point-615a52455e7943acaa652931e476d14a", "author": "None"}]}}, "Sport": {}};